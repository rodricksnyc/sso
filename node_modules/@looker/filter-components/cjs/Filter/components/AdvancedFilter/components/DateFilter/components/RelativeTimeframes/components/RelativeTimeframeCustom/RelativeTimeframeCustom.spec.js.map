{"version":3,"file":"RelativeTimeframeCustom.spec.js","names":["dateRegex","getMockComponent","props","defaultProps","value","AllPresetTimeframes","Today","onCustomChange","jest","fn","getSelectedDatesLabels","container","selectedDates","querySelectorAll","Array","from","map","selectedDate","getAttribute","describe","beforeEach","defaultDate","Date","spyOn","mockImplementation","getTime","it","renderWithTheme","fromDateInput","screen","getByTestId","toDateInput","expect","toMatch","selectedDatesLabels","toEqual","fromDate","toDate","to","toBe","fireEvent","click","getByText","waitFor","getByTitle","toHaveAttribute","change","target","toMatchInlineSnapshot"],"sources":["../../../../../../../../../../../src/Filter/components/AdvancedFilter/components/DateFilter/components/RelativeTimeframes/components/RelativeTimeframeCustom/RelativeTimeframeCustom.spec.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { fireEvent, screen, waitFor } from '@testing-library/react'\nimport React from 'react'\nimport { AllPresetTimeframes } from '../../../../types/relative_timeframe_types'\nimport { RelativeTimeframeCustom } from './RelativeTimeframeCustom'\n\nconst dateRegex = /\\d{4}\\/\\d{2}\\/\\d{2}/\n\nconst getMockComponent = (props: any = {}) => {\n  const defaultProps = {\n    value: AllPresetTimeframes.Today,\n    onCustomChange: jest.fn(),\n  }\n  return <RelativeTimeframeCustom {...defaultProps} {...props} />\n}\n\nconst getSelectedDatesLabels = (container: HTMLElement) => {\n  const selectedDates = container.querySelectorAll('[aria-selected=\"true\"]')\n  return Array.from(selectedDates).map((selectedDate) =>\n    selectedDate.getAttribute('aria-label')\n  )\n}\n\ndescribe('RelativeTimeframeCustom', () => {\n  beforeEach(() => {\n    const defaultDate = new Date('2019-01-01T00:00:00.000-08:00')\n    jest.spyOn(Date, 'now').mockImplementation(() => defaultDate.getTime())\n  })\n\n  it('should default as expected when value is an AllPresetTimeframes', () => {\n    const { container } = renderWithTheme(getMockComponent())\n    // Should default the input fields to the current day.\n    const fromDateInput = screen.getByTestId(\n      'date-from-text-input'\n    ) as HTMLInputElement\n    const toDateInput = screen.getByTestId(\n      'date-to-text-input'\n    ) as HTMLInputElement\n    expect(fromDateInput.value).toMatch(dateRegex)\n    expect(toDateInput.value).toMatch(dateRegex)\n    // Should select the current day by default.\n    const selectedDatesLabels = getSelectedDatesLabels(container)\n    expect(selectedDatesLabels).toEqual([])\n  })\n\n  it('should accept date range', async () => {\n    const fromDate = new Date('2019-01-10T00:00:00.000-08:00')\n    const toDate = new Date('2019-01-15T00:00:00.000-08:00')\n    renderWithTheme(\n      getMockComponent({\n        value: {\n          from: fromDate,\n          to: toDate,\n        },\n      })\n    )\n    // Should default the input fields to the date range.\n    const fromDateInput = screen.getByTestId(\n      'date-from-text-input'\n    ) as HTMLInputElement\n    const toDateInput = screen.getByTestId(\n      'date-to-text-input'\n    ) as HTMLInputElement\n    expect(fromDateInput.value).toBe('2019/01/10')\n    expect(toDateInput.value).toBe('2019/01/15')\n    fireEvent.click(screen.getByText('Open calendar'))\n    await waitFor(() => {\n      expect(screen.getByTitle('Thu Jan 10, 2019')).toHaveAttribute(\n        'aria-selected',\n        'true'\n      )\n    })\n    expect(screen.getByTitle('Tue Jan 15, 2019')).toHaveAttribute(\n      'aria-selected',\n      'true'\n    )\n  })\n\n  it('should handle updates', () => {\n    const onCustomChange = jest.fn()\n    renderWithTheme(getMockComponent({ onCustomChange }))\n    const fromDateInput = screen.getByTestId(\n      'date-from-text-input'\n    ) as HTMLInputElement\n    const toDateInput = screen.getByTestId(\n      'date-to-text-input'\n    ) as HTMLInputElement\n    // Handle input text changes.\n    fireEvent.change(toDateInput, { target: { value: '2019/01/12' } })\n    fireEvent.change(fromDateInput, { target: { value: '2019/01/11' } })\n    expect(fromDateInput.value).toMatchInlineSnapshot(`\"2019/01/11\"`)\n    expect(toDateInput.value).toMatchInlineSnapshot(`\"2019/01/12\"`)\n  })\n})\n"],"mappings":";;;;;;;;AAyBA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,SAAS,GAAG,qBAAlB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAqB;EAAA,IAApBC,KAAoB,uEAAP,EAAO;EAC5C,IAAMC,YAAY,GAAG;IACnBC,KAAK,EAAEC,6CAAA,CAAoBC,KADR;IAEnBC,cAAc,EAAEC,IAAI,CAACC,EAAL;EAFG,CAArB;EAIA,OAAO,iCAAC,gDAAD,gCAA6BN,YAA7B,EAA+CD,KAA/C,EAAP;AACD,CAND;;AAQA,IAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,SAAD,EAA4B;EACzD,IAAMC,aAAa,GAAGD,SAAS,CAACE,gBAAV,CAA2B,wBAA3B,CAAtB;EACA,OAAOC,KAAK,CAACC,IAAN,CAAWH,aAAX,EAA0BI,GAA1B,CAA8B,UAACC,YAAD;IAAA,OACnCA,YAAY,CAACC,YAAb,CAA0B,YAA1B,CADmC;EAAA,CAA9B,CAAP;AAGD,CALD;;AAOAC,QAAQ,CAAC,yBAAD,EAA4B,YAAM;EACxCC,UAAU,CAAC,YAAM;IACf,IAAMC,WAAW,GAAG,IAAIC,IAAJ,CAAS,+BAAT,CAApB;IACAd,IAAI,CAACe,KAAL,CAAWD,IAAX,EAAiB,KAAjB,EAAwBE,kBAAxB,CAA2C;MAAA,OAAMH,WAAW,CAACI,OAAZ,EAAN;IAAA,CAA3C;EACD,CAHS,CAAV;EAKAC,EAAE,CAAC,iEAAD,EAAoE,YAAM;IAC1E,uBAAsB,IAAAC,oCAAA,EAAgB1B,gBAAgB,EAAhC,CAAtB;IAAA,IAAQU,SAAR,oBAAQA,SAAR;;IAEA,IAAMiB,aAAa,GAAGC,aAAA,CAAOC,WAAP,CACpB,sBADoB,CAAtB;;IAGA,IAAMC,WAAW,GAAGF,aAAA,CAAOC,WAAP,CAClB,oBADkB,CAApB;;IAGAE,MAAM,CAACJ,aAAa,CAACxB,KAAf,CAAN,CAA4B6B,OAA5B,CAAoCjC,SAApC;IACAgC,MAAM,CAACD,WAAW,CAAC3B,KAAb,CAAN,CAA0B6B,OAA1B,CAAkCjC,SAAlC;IAEA,IAAMkC,mBAAmB,GAAGxB,sBAAsB,CAACC,SAAD,CAAlD;IACAqB,MAAM,CAACE,mBAAD,CAAN,CAA4BC,OAA5B,CAAoC,EAApC;EACD,CAdC,CAAF;EAgBAT,EAAE,CAAC,0BAAD,6DAA6B;IAAA;IAAA;MAAA;QAAA;UAAA;YACvBU,QADuB,GACZ,IAAId,IAAJ,CAAS,+BAAT,CADY;YAEvBe,MAFuB,GAEd,IAAIf,IAAJ,CAAS,+BAAT,CAFc;YAG7B,IAAAK,oCAAA,EACE1B,gBAAgB,CAAC;cACfG,KAAK,EAAE;gBACLW,IAAI,EAAEqB,QADD;gBAELE,EAAE,EAAED;cAFC;YADQ,CAAD,CADlB;YASMT,aAZuB,GAYPC,aAAA,CAAOC,WAAP,CACpB,sBADoB,CAZO;YAevBC,WAfuB,GAeTF,aAAA,CAAOC,WAAP,CAClB,oBADkB,CAfS;YAkB7BE,MAAM,CAACJ,aAAa,CAACxB,KAAf,CAAN,CAA4BmC,IAA5B,CAAiC,YAAjC;YACAP,MAAM,CAACD,WAAW,CAAC3B,KAAb,CAAN,CAA0BmC,IAA1B,CAA+B,YAA/B;;YACAC,gBAAA,CAAUC,KAAV,CAAgBZ,aAAA,CAAOa,SAAP,CAAiB,eAAjB,CAAhB;;YApB6B;YAAA,OAqBvB,IAAAC,cAAA,EAAQ,YAAM;cAClBX,MAAM,CAACH,aAAA,CAAOe,UAAP,CAAkB,kBAAlB,CAAD,CAAN,CAA8CC,eAA9C,CACE,eADF,EAEE,MAFF;YAID,CALK,CArBuB;;UAAA;YA2B7Bb,MAAM,CAACH,aAAA,CAAOe,UAAP,CAAkB,kBAAlB,CAAD,CAAN,CAA8CC,eAA9C,CACE,eADF,EAEE,MAFF;;UA3B6B;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA7B,GAAF;EAiCAnB,EAAE,CAAC,uBAAD,EAA0B,YAAM;IAChC,IAAMnB,cAAc,GAAGC,IAAI,CAACC,EAAL,EAAvB;IACA,IAAAkB,oCAAA,EAAgB1B,gBAAgB,CAAC;MAAEM,cAAc,EAAdA;IAAF,CAAD,CAAhC;;IACA,IAAMqB,aAAa,GAAGC,aAAA,CAAOC,WAAP,CACpB,sBADoB,CAAtB;;IAGA,IAAMC,WAAW,GAAGF,aAAA,CAAOC,WAAP,CAClB,oBADkB,CAApB;;IAIAU,gBAAA,CAAUM,MAAV,CAAiBf,WAAjB,EAA8B;MAAEgB,MAAM,EAAE;QAAE3C,KAAK,EAAE;MAAT;IAAV,CAA9B;;IACAoC,gBAAA,CAAUM,MAAV,CAAiBlB,aAAjB,EAAgC;MAAEmB,MAAM,EAAE;QAAE3C,KAAK,EAAE;MAAT;IAAV,CAAhC;;IACA4B,MAAM,CAACJ,aAAa,CAACxB,KAAf,CAAN,CAA4B4C,qBAA5B;IACAhB,MAAM,CAACD,WAAW,CAAC3B,KAAb,CAAN,CAA0B4C,qBAA1B;EACD,CAdC,CAAF;AAeD,CAtEO,CAAR"}