{"version":3,"file":"number_grammar.spec.js","names":["convertTypeToOption","parseFilterExpression","treeToList","numberExpressionTestItems","testNumericItem","testItem","test","expression","type","ast","expect","toMatchSnapshot","list","item","itemType","toEqual","describe","forEach","fail","it","each","toBe","numeric","testNumeric","textInput","value","join","nullValues","testNull","toBeUndefined","error","toBeNull","between","low","high","bounds","String","nowSupported","unsupported"],"sources":["../../src/grammars/number_grammar.spec.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport type { FilterModel } from '../types'\nimport {\n  convertTypeToOption,\n  parseFilterExpression,\n  treeToList,\n} from '../utils'\nimport type { GrammarTestItem } from './grammar_test_utils'\nimport { numberExpressionTestItems } from './number_grammar_test_expressions'\nconst testNumericItem = (testItem: GrammarTestItem) => {\n  test(testItem.expression, () => {\n    const { expression, type } = testItem\n    const ast = parseFilterExpression('number', expression)\n    expect(ast).toMatchSnapshot()\n    const list = treeToList(ast)\n    const item = list[0]\n    let itemType = item.type\n    if (type !== 'matchesAdvanced') {\n      itemType = convertTypeToOption(item)\n    }\n    expect(itemType).toEqual(type)\n  })\n}\n\ndescribe('Number grammar can parse', () => {\n  numberExpressionTestItems.forEach(testNumericItem)\n})\n\n// these tests should fail\nconst fail = ['(,)', 'AND', 'OR', '[inf,10]']\n\ndescribe(\"Number grammar can't parse\", () => {\n  it.each(fail)('%s', (expression) => {\n    const ast = parseFilterExpression('number', expression)\n    expect(ast).toMatchSnapshot()\n    expect(ast.type).toBe('matchesAdvanced')\n    expect(ast.expression).toEqual(expression)\n  })\n})\n\nconst numeric = [\n  ['1', '=', '1'],\n  ['1, 2, 3', '=', '1,2,3'],\n  ['3.14159', '=', '3.14159'],\n  ['123456789', '=', '123456789'],\n  ['0.01', '=', '0.01'],\n  ['.01', '=', /* \".01\" */ '0.01'],\n  ['-.01', '=', /* \"-.01\" */ '-0.01'],\n  ['-0.01', '=', '-0.01'],\n  ['1, -1, 0.1', '=', '1,-1,0.1'],\n\n  ['not 1', '!=', '1'],\n  ['not 1, 2, 3', '!=', '1,2,3'],\n  ['<> 1', '!=', '1'],\n  ['!= 1, 2, 3', '!=', '1,2,3'],\n  ['not -1.2', '!=', '-1.2'],\n  ['not -.2', '!=', /* \"-.2\" */ '-0.2'],\n\n  ['> 1.1', '>', '1.1'],\n  ['>0.1', '>', '0.1'],\n  ['>999', '>', '999'],\n  ['> -42', '>', '-42'],\n  ['>-242', '>', '-242'],\n  ['>    0', '>', '0'],\n\n  ['< 1.1', '<', '1.1'],\n  ['<3', '<', '3'],\n  ['<0.1', '<', '0.1'],\n  ['<999', '<', '999'],\n  ['< -42', '<', '-42'],\n  ['<-242', '<', '-242'],\n  ['<    0', '<', '0'],\n\n  ['<= 1.1', '<=', '1.1'],\n  ['<=0.1', '<=', '0.1'],\n  ['<=999', '<=', '999'],\n  ['<= -42', '<=', '-42'],\n  ['<=-242', '<=', '-242'],\n  ['<=    0', '<=', '0'],\n\n  ['>= 1.1', '>=', '1.1'],\n  ['>=0.1', '>=', '0.1'],\n  ['>=999', '>=', '999'],\n  ['>= -42', '>=', '-42'],\n  ['>=-242', '>=', '-242'],\n  ['>=    0', '>=', '0'],\n]\n\nconst testNumeric = (\n  expression: string,\n  type: string,\n  textInput: string | undefined\n) => {\n  const ast = parseFilterExpression('number', expression)\n  expect(ast).toMatchSnapshot()\n  const list = treeToList(ast)\n  const item = list[0]\n  let itemType = item.type\n  if (type !== 'matchesAdvanced') {\n    itemType = convertTypeToOption(item)\n  }\n  expect(itemType).toEqual(type)\n  if (type !== 'matchesAdvanced' && type !== 'between') {\n    expect(textInput).toBe(item.value ? item.value.join(',') : item.value)\n  }\n}\n\ndescribe('Additional number tests', () => {\n  it.each(numeric)('%s', testNumeric)\n})\n\nconst nullValues = [\n  ['NULL', 'null'],\n  ['NOT NULL', '!null'],\n  ['null', 'null'],\n  ['not null', '!null'],\n  ['nUll', 'null'],\n  ['Not Null', '!null'],\n]\n\nconst testNull = (expression: string, type: string) => {\n  try {\n    const ast = parseFilterExpression('number', expression)\n    expect(ast).toMatchSnapshot()\n    const itemType = convertTypeToOption(ast as FilterModel)\n    expect(itemType).toEqual(type)\n    expect(ast.value).toBeUndefined()\n  } catch (error) {\n    expect(error).toBeNull()\n  }\n}\n\ndescribe('nullValues number tests', () => {\n  it.each(nullValues)('%s', testNull)\n})\n\nconst between: GrammarTestItem[] = [\n  { expression: '1 to 5', type: 'between', low: '1', high: '5', bounds: '[]' },\n  {\n    expression: '-1.0 to .75',\n    type: 'between',\n    low: '-1.0',\n    high: '.75',\n    bounds: '[]',\n  },\n\n  {\n    expression: '>7 AND <80.44',\n    type: 'between',\n    low: '7',\n    high: '80.44',\n    bounds: '()',\n  },\n  {\n    expression: '>= 7 AND <80.44',\n    type: 'between',\n    low: '7',\n    high: '80.44',\n    bounds: '[)',\n  },\n  {\n    expression: '<=80.44  AND    >.1',\n    type: 'between',\n    low: '0.1',\n    high: '80.44',\n    bounds: '(]',\n  },\n\n  { expression: '[2, 4]', type: 'between', low: '2', high: '4', bounds: '[]' },\n  {\n    expression: '[0.1,   -4)',\n    type: 'between',\n    low: '0.1',\n    high: '-4',\n    bounds: '[)',\n  },\n  {\n    expression: '(0.1,   -4]',\n    type: 'between',\n    low: '0.1',\n    high: '-4',\n    bounds: '(]',\n  },\n  {\n    expression: '(0.1, .11111)',\n    type: 'between',\n    low: '0.1',\n    high: '0.11111',\n    bounds: '()',\n  },\n\n  {\n    expression: 'NOT 1 to 5',\n    type: '!between',\n    low: '1',\n    high: '5',\n    bounds: '[]',\n  },\n  {\n    expression: 'NOT -1.0 to .75',\n    type: '!between',\n    low: '-1.0',\n    high: '.75',\n    bounds: '[]',\n  },\n  {\n    expression: 'not 3 to 80.44',\n    type: '!between',\n    low: '3',\n    high: '80.44',\n    bounds: '[]',\n  },\n\n  {\n    expression: '<7 OR >80.44',\n    type: '!between',\n    low: '7',\n    high: '80.44',\n    bounds: '()',\n  },\n  {\n    expression: '<= 7 OR >80.44',\n    type: '!between',\n    low: '7',\n    high: '80.44',\n    bounds: '[)',\n  },\n  {\n    expression: '>=80.44  OR    <.1',\n    type: '!between',\n    low: '0.1',\n    high: '80.44',\n    bounds: '(]',\n  },\n\n  {\n    expression: 'NOT[2, 4]',\n    type: '!between',\n    low: '2',\n    high: '4',\n    bounds: '[]',\n  },\n  {\n    expression: 'NOT [0.1,   -4)',\n    type: '!between',\n    low: '0.1',\n    high: '-4',\n    bounds: '[)',\n  },\n  {\n    expression: 'NOT  (0.1,   -4]',\n    type: '!between',\n    low: '0.1',\n    high: '-4',\n    bounds: '(]',\n  },\n  {\n    expression: 'NOT(0.1, .11111)',\n    type: '!between',\n    low: '0.1',\n    high: '0.11111',\n    bounds: '()',\n  },\n]\n\ndescribe('between tests', () => {\n  between.forEach((testItem: GrammarTestItem) => {\n    it(testItem.expression, () => {\n      const { expression, type, low, high, bounds } = testItem\n      const ast = parseFilterExpression('number', expression)\n      expect(ast).toMatchSnapshot()\n      const itemType = convertTypeToOption(ast as FilterModel)\n      expect(type).toEqual(itemType)\n      expect(String(ast.low)).toEqual(low)\n      expect(String(ast.high)).toEqual(high)\n      expect(ast.bounds).toEqual(bounds)\n    })\n  })\n})\n\n// prettier-ignore\nconst nowSupported = [\n  // the following previously had no deserializer,\t\n  // but are now supported\t\n  [\"1 to\",                   \">=\",     \"1\"],\t\n  [\"to -1\",                  \"<=\",     \"-1\"],\t\n  [\"to 0.1\",                 \"<=\",     \"0.1\"],\t\n  [\"not 1, not 2\",           \"!=\",     \"1,2\"],\t\n  [\"<> 1, <> 2\",             \"!=\",     \"1,2\"],\t\n  [\"!= 1, != 2\",             \"!=\",     \"1,2\"],\t\n  [\"1, not 2\",               \"!=\",     \"1,2\"],\n  [\">1 AND <2 OR >3 AND <4\", \"between\",      \">1 AND <2 OR >3 AND <4\"],\t\n]\n\ndescribe('nowSupported expressions', () => {\n  it.each(nowSupported)('%s', testNumeric)\n})\n\n// prettier-ignore\nconst unsupported = [\t\n  [\"0.1.1.1\",                \"matchesAdvanced\",     \"0.1.1.1\"],\t\n  [\"0.....1\",                \"matchesAdvanced\",     \"0.....1\"],\t\n  [\"--1\",                    \"matchesAdvanced\",     \"--1\"],\t\n  [\"foo\",                    \"matchesAdvanced\",     \"foo\"],\t\n  [\"seventeen\",              \"matchesAdvanced\",     \"seventeen\"],\t\n  [\"&,,,$%testContext.#,,,$,testContext.\",         \"matchesAdvanced\",     \"&,,,$%testContext.#,,,$,testContext.\"],\t\n  [\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",         \"matchesAdvanced\",     \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"],\t\n  [\"~`!testContext.#$%^*()-+=_{}[]|?\",  \"matchesAdvanced\",     \"~`!testContext.#$%^*()-+=_{}[]|?\"],\t\n  [\"<>,. ¡™£¢∞§¶•ªº–≠œ∑\",    \"matchesAdvanced\",     \"<>,. ¡™£¢∞§¶•ªº–≠œ∑\"],\t\n  [\"´®†¥¨ˆøπ“‘åß∂ƒ©˙∆˚¬…æ\",  \"matchesAdvanced\",     \"´®†¥¨ˆøπ“‘åß∂ƒ©˙∆˚¬…æ\"],\t\n  [\"Ω≈ç√∫˜µ≤≥÷\",             \"matchesAdvanced\",     \"Ω≈ç√∫˜µ≤≥÷\"],\t\n  [\"😻🌚\",                   \"matchesAdvanced\",     \"😻🌚\"],\t\n  [\"^12345\",                 \"matchesAdvanced\",     \"^12345\"],\t\n  [\"1234^, 567\", \"matchesAdvanced\", \"1234^, 567\"],\t\n\n]\n\ndescribe('unsuppored expressions', () => {\n  it.each(unsupported)('%s', testNumeric)\n})\n"],"mappings":"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"}