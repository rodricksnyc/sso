{"version":3,"file":"useScrollLock.spec.js","names":["ScrollLockProvider","fireEvent","render","screen","React","useScrollLock","useToggle","globalConsole","global","console","warnMock","jest","fn","paddingSpy","beforeEach","spyOn","document","body","style","warn","afterEach","resetAllMocks","mockClear","ScrollLockComponent","ref","value","toggle","describe","test","expect","not","toHaveStyle","overflow","getByText","click","mock","calls","toMatchInlineSnapshot","widthSpy","documentElement","mockImplementation","toHaveBeenCalled","mockRestore","scrollDiv","getByTestId","scrollSpy","scroll","window"],"sources":["../../src/utils/useScrollLock.spec.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { ScrollLockProvider } from '@looker/components-providers'\nimport { fireEvent, render, screen } from '@testing-library/react'\nimport React from 'react'\nimport { useScrollLock, useToggle } from './'\n\nconst globalConsole = global.console\nconst warnMock = jest.fn()\nlet paddingSpy: jest.SpyInstance<void, string[]>\n\nbeforeEach(() => {\n  paddingSpy = jest.spyOn(document.body.style, 'paddingRight', 'set')\n  global.console = ({\n    ...globalConsole,\n    warn: warnMock,\n  } as unknown) as Console\n})\n\nafterEach(() => {\n  jest.resetAllMocks()\n  global.console = globalConsole\n  paddingSpy.mockClear()\n})\n\nconst ScrollLockComponent = () => {\n  const [, ref] = useScrollLock()\n  const { value, toggle } = useToggle()\n  return (\n    <>\n      {value && <div ref={ref} data-testid=\"scroll-lock-element\" />}\n      <button onClick={toggle}>toggle</button>\n    </>\n  )\n}\n\ndescribe('useScrollLock', () => {\n  describe('toggle body styles', () => {\n    test('with no existing style', () => {\n      render(\n        <ScrollLockProvider>\n          <ScrollLockComponent />\n        </ScrollLockProvider>\n      )\n      expect(document.body).not.toHaveStyle({ overflow: 'hidden' })\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n      expect(document.body).toHaveStyle({ overflow: 'hidden' })\n      // haven't found a better way to test scrollbar offset style\n      expect(paddingSpy.mock.calls).toMatchInlineSnapshot(`\n        Array [\n          Array [\n            \"calc( + 0px)\",\n          ],\n        ]\n      `)\n      fireEvent.click(toggle)\n      expect(document.body).not.toHaveStyle({ overflow: 'hidden' })\n    })\n\n    test('with existing style', () => {\n      // create an existing style\n      document.body.style.overflow = 'scroll'\n      render(\n        <ScrollLockProvider>\n          <ScrollLockComponent />\n        </ScrollLockProvider>\n      )\n      expect(document.body).toHaveStyle({ overflow: 'scroll' })\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n      expect(document.body).toHaveStyle({ overflow: 'hidden' })\n      // haven't found a better way to test scrollbar offset style\n      expect(paddingSpy.mock.calls).toMatchInlineSnapshot(`\n              Array [\n                Array [\n                  \"calc( + 0px)\",\n                ],\n              ]\n          `)\n      fireEvent.click(toggle)\n      expect(document.body).toHaveStyle({ overflow: 'scroll' })\n      document.body.style.overflow = ''\n    })\n\n    test('no scrollbar detected', () => {\n      const widthSpy = jest\n        .spyOn(document.documentElement, 'clientWidth', 'get')\n        // Make it bigger than jest default for innerWidth: 1024\n        .mockImplementation(() => 1025)\n      render(\n        <ScrollLockProvider>\n          <ScrollLockComponent />\n        </ScrollLockProvider>\n      )\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n      // no scrollbar offset\n      expect(paddingSpy).not.toHaveBeenCalled()\n      widthSpy.mockRestore()\n    })\n  })\n\n  test('warning when used without ScrollLockProvider', () => {\n    render(<ScrollLockComponent />)\n    expect(warnMock.mock.calls).toMatchInlineSnapshot(`\n      Array [\n        Array [\n          \"ScrollLockContext is missing. Please wrap all @looker/components in a ComponentsProvider.\",\n        ],\n      ]\n    `)\n  })\n\n  describe('scroll handler', () => {\n    test('stops scroll in other elements', () => {\n      render(\n        <ScrollLockProvider>\n          <ScrollLockComponent />\n          <div data-testid=\"scrollable-element\" />\n        </ScrollLockProvider>\n      )\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n\n      const scrollDiv = screen.getByTestId('scrollable-element')\n      const scrollSpy = jest.spyOn(scrollDiv, 'scrollTop', 'set')\n      fireEvent.scroll(scrollDiv)\n      expect(scrollSpy.mock.calls).toMatchInlineSnapshot(`\n              Array [\n                Array [\n                  0,\n                ],\n              ]\n          `)\n      scrollSpy.mockRestore()\n    })\n\n    test('does not stop scroll in scroll lock element', () => {\n      render(\n        <ScrollLockProvider>\n          <ScrollLockComponent />\n          <div data-testid=\"scroll me\" />\n        </ScrollLockProvider>\n      )\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n\n      const scrollDiv = screen.getByTestId('scroll-lock-element')\n      const scrollSpy = jest.spyOn(scrollDiv, 'scrollTop', 'set')\n      fireEvent.scroll(scrollDiv)\n      expect(scrollSpy).not.toHaveBeenCalled()\n      scrollSpy.mockRestore()\n    })\n\n    test('stops scroll on document', () => {\n      render(\n        <ScrollLockProvider>\n          <ScrollLockComponent />\n          <div data-testid=\"scroll me\" />\n        </ScrollLockProvider>\n      )\n      const toggle = screen.getByText('toggle')\n      fireEvent.click(toggle)\n\n      const scrollSpy = jest\n        .spyOn(window, 'scrollTo')\n        .mockImplementation(() => {\n          // do nothing, just need an implementation b/c jsdom doesn't have one\n        })\n      fireEvent.scroll(document)\n      expect(scrollSpy.mock.calls).toMatchInlineSnapshot(`\n        Array [\n          Array [\n            Object {\n              \"top\": 0,\n            },\n          ],\n        ]\n      `)\n      scrollSpy.mockRestore()\n    })\n  })\n})\n"],"mappings":"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"}