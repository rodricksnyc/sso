{"version":3,"file":"InputColor.spec.js","names":["React","useState","fireEvent","screen","renderWithTheme","Button","InputColor","describe","test","expect","getByDisplayValue","toBeInTheDocument","input","focus","change","target","value","click","document","Wrapper","setValue","handleClick","handleChange","e","currentTarget","button","getByText","getByPlaceholderText","toHaveValue","getByTestId","onBlur","jest","fn","onFocus","toHaveFocus","toHaveBeenCalled","blur","not","lightSaturationPreview","mouseDown","clientX","clientY","toBe","skip","mouseMove","mouseUp","getByRole","toBeDisabled","queryByTestId","toHaveAttribute","onChangeMock","mock","calls","toMatchInlineSnapshot"],"sources":["../../../../src/Form/Inputs/InputColor/InputColor.spec.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport 'jest-styled-components'\nimport '@testing-library/jest-dom/extend-expect'\nimport type { FormEvent } from 'react'\nimport React, { useState } from 'react'\nimport { fireEvent, screen } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\n\nimport { Button } from '../../../Button'\nimport { InputColor } from './InputColor'\n\ndescribe('InputColor', () => {\n  test('starts with a named color value', () => {\n    renderWithTheme(<InputColor value=\"green\" />)\n    expect(screen.getByDisplayValue('green')).toBeInTheDocument()\n  })\n\n  test('responds to input value change', () => {\n    renderWithTheme(<InputColor value=\"green\" />)\n    const input = screen.getByDisplayValue('green')\n    input.focus()\n    fireEvent.change(input, { target: { value: 'blue' } })\n    expect(screen.getByDisplayValue('blue')).toBeInTheDocument()\n    fireEvent.click(document)\n  })\n\n  test('with controlled state', () => {\n    function Wrapper() {\n      const [value, setValue] = useState('')\n      function handleClick() {\n        setValue('yellow')\n      }\n      function handleChange(e: FormEvent<HTMLInputElement>) {\n        setValue(e.currentTarget.value)\n      }\n      return (\n        <>\n          <Button onClick={handleClick}>Turn yellow</Button>\n          <InputColor\n            value={value}\n            onChange={handleChange}\n            placeholder=\"Select a color\"\n          />\n        </>\n      )\n    }\n    renderWithTheme(<Wrapper />)\n\n    const button = screen.getByText('Turn yellow')\n    const input = screen.getByPlaceholderText('Select a color')\n    expect(input).toHaveValue('')\n    fireEvent.click(button)\n    expect(input).toHaveValue('yellow')\n    fireEvent.change(input, { target: { value: 'purple' } })\n    expect(input).toHaveValue('purple')\n\n    fireEvent.click(document)\n  })\n\n  test('opens on swatch click', () => {\n    renderWithTheme(<InputColor value=\"green\" />)\n    fireEvent.click(screen.getByTestId('swatch'))\n    expect(screen.getByTestId('color-picker')).toBeInTheDocument()\n    fireEvent.click(document)\n  })\n\n  test('can receive focus and blur handlers', () => {\n    const onBlur = jest.fn()\n    const onFocus = jest.fn()\n    renderWithTheme(\n      <InputColor onBlur={onBlur} onFocus={onFocus} value=\"green\" />\n    )\n\n    const input = screen.getByDisplayValue('green')\n\n    input.focus()\n    expect(input).toHaveFocus()\n    expect(onFocus).toHaveBeenCalled()\n\n    input.blur()\n    expect(input).not.toHaveFocus()\n    expect(onBlur).toHaveBeenCalled()\n  })\n\n  test('changes color on <ColorPicker/> click', () => {\n    renderWithTheme(<InputColor placeholder=\"Select a color\" />)\n    const input = screen.getByPlaceholderText(\n      'Select a color'\n    ) as HTMLInputElement\n\n    fireEvent.click(screen.getByTestId('swatch'))\n\n    const lightSaturationPreview = screen.getByTestId(\n      'light-saturation-preview'\n    )\n\n    fireEvent.mouseDown(lightSaturationPreview, { clientX: 0, clientY: 0 })\n\n    expect(input.value).toBe('#ffffff')\n\n    /**\n     * Close popover to silence act() warning\n     * Note: Having just one click event produces the act() warning,\n     * but having two events gets around this.\n     *\n     * Something about firing a mouseDown event (as opposed to a click\n     * event) within the popover leads to funky test behavior. We need to\n     * fire a mouseDown here, though, since the LightSaturationPreview uses mouse down\n     * to the start the color handle movement / dragging.\n     */\n    fireEvent.click(document)\n    fireEvent.click(document)\n  })\n\n  // mouseMove doesn't seem to move mouse position; leaving as test.skip( for now\n  test.skip('changes color on <ColorPicker/> mouse drag', () => {\n    renderWithTheme(<InputColor placeholder=\"Select a color\" />)\n    const input = screen.getByPlaceholderText(\n      'Select a color'\n    ) as HTMLInputElement\n\n    fireEvent.click(screen.getByTestId('swatch'))\n\n    const lightSaturationPreview = screen.getByTestId(\n      'light-saturation-preview'\n    )\n\n    fireEvent.mouseDown(lightSaturationPreview)\n\n    fireEvent.mouseMove(lightSaturationPreview, { clientX: 200, clientY: 0 })\n    expect(input.value).toBe('#ff0000')\n\n    fireEvent.mouseUp(lightSaturationPreview)\n\n    /**\n     * Close popover to silence act() warning\n     * Note: Having just one click event produces the act() warning,\n     * but having two events gets around this.\n     *\n     * Something about firing a mouseDown event (as opposed to a click\n     * event) within the popover leads to funky test behavior. We need to\n     * fire a mouseDown here, though, since the LightSaturationPreview uses mouse down\n     * to the start the color handle movement / dragging.\n     */\n    fireEvent.click(document)\n    fireEvent.click(document)\n  })\n\n  test('disabled', () => {\n    renderWithTheme(<InputColor disabled value=\"green\" />)\n\n    // Find input, verify it's disabled\n    expect(screen.getByRole('textbox')).toBeDisabled()\n\n    // Find swatch, verify clicking doesn't open Popover\n    fireEvent.click(screen.getByTestId('swatch'))\n    expect(screen.queryByTestId('color-picker')).not.toBeInTheDocument()\n  })\n\n  test('readOnly', () => {\n    renderWithTheme(<InputColor readOnly value=\"green\" />)\n\n    // Find input, verify it's readOnly\n    expect(screen.getByRole('textbox')).toHaveAttribute('readonly')\n\n    // Find swatch, verify clicking doesn't open Popover\n    fireEvent.click(screen.getByTestId('swatch'))\n    expect(screen.queryByTestId('color-picker')).not.toBeInTheDocument()\n  })\n\n  test('clear value', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(<InputColor value=\"green\" onChange={onChangeMock} />)\n    fireEvent.change(screen.getByRole('textbox'), { target: { value: '' } })\n    expect(onChangeMock.mock.calls).toMatchInlineSnapshot(`\n      Array [\n        Array [\n          Object {\n            \"currentTarget\": Object {\n              \"name\": undefined,\n              \"value\": \"\",\n            },\n            \"target\": Object {\n              \"name\": undefined,\n              \"value\": \"\",\n            },\n          },\n        ],\n      ]\n    `)\n\n    fireEvent.click(document)\n  })\n\n  test('clear value with button', () => {\n    const onChangeMock = jest.fn()\n    renderWithTheme(<InputColor value=\"green\" onChange={onChangeMock} />)\n    fireEvent.click(screen.getByRole('button'))\n    expect(onChangeMock.mock.calls).toMatchInlineSnapshot(`\n      Array [\n        Array [\n          Object {\n            \"currentTarget\": Object {\n              \"name\": undefined,\n              \"value\": \"\",\n            },\n            \"target\": Object {\n              \"name\": undefined,\n              \"value\": \"\",\n            },\n          },\n        ],\n      ]\n    `)\n  })\n})\n"],"mappings":"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"}