{"version":3,"file":"useHovered.js","names":["useHovered","hoverElement","useCallbackRef","newElement","callbackRef","element","useState","undefined","isHovered","setIsHovered","useEffect","handleMouseEnter","handleMouseLeave","window","requestAnimationFrame","node","getCurrentNode","relationship","document","activeElement","compareDocumentPosition","Node","DOCUMENT_POSITION_DISCONNECTED","activeElementIsChildOfNode","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINED_BY","addEventListener","removeEventListener"],"sources":["../../../src/utils/useHovered.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { RefObject } from 'react'\nimport { useEffect, useState } from 'react'\nimport { getCurrentNode } from './getCurrentNode'\nimport { useCallbackRef } from './useCallbackRef'\n\n/**\n * Get the hover / focus state of an element over which the current component has no control\n */\nexport function useHovered<E extends HTMLElement = HTMLElement>(\n  hoverElement?: E | null | RefObject<E>\n): [boolean, ((node: E | null) => void) | null] {\n  const [newElement, callbackRef] = useCallbackRef<E>()\n  const element =\n    typeof hoverElement === 'undefined' ? newElement : hoverElement\n\n  // If the hoverElement is either null nor a dom node, isHovered defaults to false\n\n  // (This works well except for the edge case where\n  // element is under the mouse at time of dom attachment.\n  // If handling this edge case is crucial, use React callbacks onMouseEnter and onMouseLeave\n  // instead of this hook)\n\n  // If the hoverElement is undefined the hover \"gate\" is not being used so\n  // isHovered defaults to true\n  const [isHovered, setIsHovered] = useState(hoverElement === undefined)\n\n  useEffect(() => {\n    function handleMouseEnter() {\n      setIsHovered(true)\n    }\n    function handleMouseLeave() {\n      window.requestAnimationFrame(() => {\n        const node = getCurrentNode(element)\n\n        const relationship =\n          document.activeElement && node\n            ? node.compareDocumentPosition(document.activeElement)\n            : Node.DOCUMENT_POSITION_DISCONNECTED\n\n        // Don't set isHovered to false if a child of the element is currently focused\n        const activeElementIsChildOfNode =\n          relationship ===\n          Node.DOCUMENT_POSITION_FOLLOWING + Node.DOCUMENT_POSITION_CONTAINED_BY\n\n        if (!activeElementIsChildOfNode) setIsHovered(false)\n      })\n    }\n\n    const node = getCurrentNode(element)\n    if (node) {\n      node.addEventListener('mouseleave', handleMouseLeave)\n      node.addEventListener('mouseenter', handleMouseEnter)\n      node.addEventListener('focusout', handleMouseLeave)\n      node.addEventListener('focusin', handleMouseEnter)\n    }\n    return () => {\n      if (node) {\n        node.removeEventListener('mouseleave', handleMouseLeave)\n        node.removeEventListener('mouseenter', handleMouseEnter)\n        node.removeEventListener('focusout', handleMouseLeave)\n        node.removeEventListener('focusin', handleMouseEnter)\n      }\n    }\n  }, [element])\n\n  return [isHovered, callbackRef]\n}\n"],"mappings":";;;;;;;;;;;AA2BA;;AACA;;AACA;;AAKO,SAASA,UAAT,CACLC,YADK,EAEyC;EAC9C,sBAAkC,IAAAC,+BAAA,GAAlC;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,WAAnB;;EACA,IAAMC,OAAO,GACX,OAAOJ,YAAP,KAAwB,WAAxB,GAAsCE,UAAtC,GAAmDF,YADrD;;EAYA,gBAAkC,IAAAK,eAAA,EAASL,YAAY,KAAKM,SAA1B,CAAlC;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAAC,gBAAA,EAAU,YAAM;IACd,SAASC,gBAAT,GAA4B;MAC1BF,YAAY,CAAC,IAAD,CAAZ;IACD;;IACD,SAASG,gBAAT,GAA4B;MAC1BC,MAAM,CAACC,qBAAP,CAA6B,YAAM;QACjC,IAAMC,IAAI,GAAG,IAAAC,8BAAA,EAAeX,OAAf,CAAb;QAEA,IAAMY,YAAY,GAChBC,QAAQ,CAACC,aAAT,IAA0BJ,IAA1B,GACIA,IAAI,CAACK,uBAAL,CAA6BF,QAAQ,CAACC,aAAtC,CADJ,GAEIE,IAAI,CAACC,8BAHX;QAMA,IAAMC,0BAA0B,GAC9BN,YAAY,KACZI,IAAI,CAACG,2BAAL,GAAmCH,IAAI,CAACI,8BAF1C;QAIA,IAAI,CAACF,0BAAL,EAAiCd,YAAY,CAAC,KAAD,CAAZ;MAClC,CAdD;IAeD;;IAED,IAAMM,IAAI,GAAG,IAAAC,8BAAA,EAAeX,OAAf,CAAb;;IACA,IAAIU,IAAJ,EAAU;MACRA,IAAI,CAACW,gBAAL,CAAsB,YAAtB,EAAoCd,gBAApC;MACAG,IAAI,CAACW,gBAAL,CAAsB,YAAtB,EAAoCf,gBAApC;MACAI,IAAI,CAACW,gBAAL,CAAsB,UAAtB,EAAkCd,gBAAlC;MACAG,IAAI,CAACW,gBAAL,CAAsB,SAAtB,EAAiCf,gBAAjC;IACD;;IACD,OAAO,YAAM;MACX,IAAII,IAAJ,EAAU;QACRA,IAAI,CAACY,mBAAL,CAAyB,YAAzB,EAAuCf,gBAAvC;QACAG,IAAI,CAACY,mBAAL,CAAyB,YAAzB,EAAuChB,gBAAvC;QACAI,IAAI,CAACY,mBAAL,CAAyB,UAAzB,EAAqCf,gBAArC;QACAG,IAAI,CAACY,mBAAL,CAAyB,SAAzB,EAAoChB,gBAApC;MACD;IACF,CAPD;EAQD,CArCD,EAqCG,CAACN,OAAD,CArCH;EAuCA,OAAO,CAACG,SAAD,EAAYJ,WAAZ,CAAP;AACD"}