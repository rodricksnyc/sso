{"version":3,"file":"useBlur.js","names":["useBlur","context","useContext","inputValue","data","state","transition","listRef","inputElement","freeInputPropRef","closeList","action","payload","current","undefined","handleBlur","e","ComboboxState","IDLE","ComboboxActionType","ESCAPE","nextFocusTarget","relatedTarget","popoverCurrent","focusInList","contains","INTERACTING","INTERACT","BLUR","preventDefault"],"sources":["../../../../../../src/Form/Inputs/Combobox/utils/useBlur.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\n// Much of the following is pulled from https://github.com/reach/reach-ui\n// because their work is fantastic (but is not in TypeScript)\nimport type { Context, FocusEvent } from 'react'\nimport { useContext } from 'react'\nimport type {\n  ComboboxContextProps,\n  ComboboxMultiContextProps,\n} from '../ComboboxContext'\nimport { ComboboxActionType, ComboboxState } from './state'\n\nexport function useBlur<\n  TContext extends\n    | ComboboxContextProps\n    | ComboboxMultiContextProps = ComboboxContextProps\n>(context: Context<TContext>) {\n  const {\n    data: { inputValue },\n    state,\n    transition,\n    listRef,\n    inputElement,\n    freeInputPropRef,\n  } = useContext(context)\n\n  function closeList(action: ComboboxActionType) {\n    // When freeInput is true, the current inputValue should not be changed on blur\n    // (for Multi, InputChips will tokenize the inputValue on blur)\n    const payload =\n      freeInputPropRef && freeInputPropRef.current ? { inputValue } : undefined\n\n    transition && transition(action, payload)\n  }\n\n  return function handleBlur(e?: FocusEvent) {\n    if (!e) {\n      // handleBlur was called directly (via popover close)\n      // only need to close the list\n      if (state !== ComboboxState.IDLE) {\n        closeList(ComboboxActionType.ESCAPE)\n      }\n      return\n    }\n    // we on want to close only if focus rests outside the select\n    const nextFocusTarget = e.relatedTarget\n    const popoverCurrent = listRef ? listRef.current : null\n    if (popoverCurrent) {\n      const focusInList =\n        popoverCurrent && popoverCurrent.contains(nextFocusTarget)\n\n      if (focusInList && state !== ComboboxState.INTERACTING) {\n        // focus landed inside the select, keep it open\n        transition && transition(ComboboxActionType.INTERACT)\n      } else if (!focusInList && nextFocusTarget !== inputElement) {\n        // focus landed outside the select, close it\n        closeList(ComboboxActionType.BLUR)\n      }\n      // Stop ComboboxMultiInput + freeInput underlying InputChips blur handler from\n      // tokenizing input value when an option is clicked\n      focusInList &&\n        freeInputPropRef &&\n        freeInputPropRef.current &&\n        e.preventDefault()\n    }\n  }\n}\n"],"mappings":";;;;;;;AA6BA;;AAKA;;AAEO,SAASA,OAAT,CAILC,OAJK,EAIuB;EAC5B,kBAOI,IAAAC,iBAAA,EAAWD,OAAX,CAPJ;EAAA,IACUE,UADV,eACEC,IADF,CACUD,UADV;EAAA,IAEEE,KAFF,eAEEA,KAFF;EAAA,IAGEC,UAHF,eAGEA,UAHF;EAAA,IAIEC,OAJF,eAIEA,OAJF;EAAA,IAKEC,YALF,eAKEA,YALF;EAAA,IAMEC,gBANF,eAMEA,gBANF;;EASA,SAASC,SAAT,CAAmBC,MAAnB,EAA+C;IAG7C,IAAMC,OAAO,GACXH,gBAAgB,IAAIA,gBAAgB,CAACI,OAArC,GAA+C;MAAEV,UAAU,EAAVA;IAAF,CAA/C,GAAgEW,SADlE;IAGAR,UAAU,IAAIA,UAAU,CAACK,MAAD,EAASC,OAAT,CAAxB;EACD;;EAED,OAAO,SAASG,UAAT,CAAoBC,CAApB,EAAoC;IACzC,IAAI,CAACA,CAAL,EAAQ;MAGN,IAAIX,KAAK,KAAKY,oBAAA,CAAcC,IAA5B,EAAkC;QAChCR,SAAS,CAACS,yBAAA,CAAmBC,MAApB,CAAT;MACD;;MACD;IACD;;IAED,IAAMC,eAAe,GAAGL,CAAC,CAACM,aAA1B;IACA,IAAMC,cAAc,GAAGhB,OAAO,GAAGA,OAAO,CAACM,OAAX,GAAqB,IAAnD;;IACA,IAAIU,cAAJ,EAAoB;MAClB,IAAMC,WAAW,GACfD,cAAc,IAAIA,cAAc,CAACE,QAAf,CAAwBJ,eAAxB,CADpB;;MAGA,IAAIG,WAAW,IAAInB,KAAK,KAAKY,oBAAA,CAAcS,WAA3C,EAAwD;QAEtDpB,UAAU,IAAIA,UAAU,CAACa,yBAAA,CAAmBQ,QAApB,CAAxB;MACD,CAHD,MAGO,IAAI,CAACH,WAAD,IAAgBH,eAAe,KAAKb,YAAxC,EAAsD;QAE3DE,SAAS,CAACS,yBAAA,CAAmBS,IAApB,CAAT;MACD;;MAGDJ,WAAW,IACTf,gBADF,IAEEA,gBAAgB,CAACI,OAFnB,IAGEG,CAAC,CAACa,cAAF,EAHF;IAID;EACF,CA9BD;AA+BD"}