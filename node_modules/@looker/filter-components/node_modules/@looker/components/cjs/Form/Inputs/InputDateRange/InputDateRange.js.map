{"version":3,"file":"InputDateRange.js","names":["getTextForDate","range","dateStringFormat","locale","endpoint","date","undefined","formatDateString","getViewMonthFromValue","value","from","to","Date","InputDateRange","styled","forwardRef","props","ref","ariaLabelledby","disabled","id","onChange","onValidationFail","readOnly","validationType","useTranslation","t","useState","viewMonth","setViewMonth","startDateLabelledby","endDateLabelledby","dateTexts","useMemo","getText","fromTextInputValue","setFromTextInputValue","useEffect","fromID","useID","toTextInputValue","setToTextInputValue","toID","getEndpoint","useCallback","updateRangeFromInput","currentTarget","inputValue","validationMessage","valueEndpoint","newRange","parsedValue","parseDateFromString","isBefore","isSameDay","isFunction","handleBlur","e","handleKeyDown","key","preventDefault","handleInputChange","useToggle","isOpen","setOpen","change","toggle","handleIconClick","usePopover","content","focusTrap","placement","triggerToggle","popover","popoverRef","commonInputProps","fontSize","onBlur","onKeyDown","isEmpty","HyphenWrapper","span","theme","hasInputValues","colors","text3","text1","InputTextGroupWrapper","div","inputCSS","fonts","body","inputHeight","space","u05","u1","inputTextHover","inputTextFocus","inputTextValidation","inputTextDisabled","InlineInputTextBase","keyAccent","u2"],"sources":["../../../../../src/Form/Inputs/InputDateRange/InputDateRange.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport type { FocusEvent, FormEvent, KeyboardEvent, Ref } from 'react'\nimport React, {\n  forwardRef,\n  useEffect,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport styled from 'styled-components'\nimport isFunction from 'lodash/isFunction'\nimport isEmpty from 'lodash/isEmpty'\nimport { isBefore, isSameDay } from 'date-fns'\nimport type { Locale } from 'date-fns'\nimport { CalendarToday } from '@styled-icons/material/CalendarToday'\nimport { useTranslation } from '../../../utils'\nimport type { RangeModifier } from '../../../Calendar/types'\nimport { Calendar } from '../../../Calendar/Calendar'\nimport { formatDateString, parseDateFromString } from '../../../Calendar/utils'\nimport { VisuallyHidden } from '../../../VisuallyHidden'\nimport { usePopover } from '../../../Popover'\nimport type { InlineInputTextProps } from '../InlineInputText'\nimport { InlineInputTextBase } from '../InlineInputText'\nimport { InputTextContent } from '../InputText/InputTextContent'\nimport { ErrorIcon } from '../ErrorIcon'\nimport { IconButton } from '../../../Button/IconButton'\nimport { Space } from '../../../Layout/Space'\nimport { useToggle, useID } from '../../../utils/'\nimport type { ValidationType } from '../../ValidationMessage'\nimport {\n  inputCSS,\n  inputTextDisabled,\n  inputTextFocus,\n  inputTextHover,\n  inputTextValidation,\n} from '../InputText'\nimport { inputHeight } from '../height'\n\nexport type InputDateRangeProps = {\n  'aria-labelledby'?: string\n  dateStringFormat?: string\n  disabled?: boolean\n  id?: string\n  locale?: Locale\n  onChange: (range: RangeModifier) => void\n  onValidationFail?: (value: string) => void\n  readOnly?: boolean\n  ref?: Ref<HTMLInputElement>\n  validationType?: ValidationType\n  value: RangeModifier\n}\n\ntype Endpoint = keyof RangeModifier\n\nconst getTextForDate = (\n  range?: RangeModifier,\n  dateStringFormat?: string,\n  locale?: Locale\n) => (endpoint?: Endpoint) => {\n  const date = endpoint ? range?.[endpoint] : undefined\n  return formatDateString(date, dateStringFormat, locale)\n}\n\nconst getViewMonthFromValue = (value: RangeModifier) =>\n  value.from || value.to || new Date()\n\nexport const InputDateRange = styled(\n  // eslint-disable-next-line react/display-name\n  forwardRef((props: InputDateRangeProps, ref: Ref<HTMLInputElement>) => {\n    const {\n      'aria-labelledby': ariaLabelledby,\n      dateStringFormat,\n      disabled,\n      locale,\n      id,\n      onChange,\n      onValidationFail,\n      readOnly,\n      value,\n      validationType,\n    } = props\n    const { t } = useTranslation('InputDateRange')\n\n    const [viewMonth, setViewMonth] = useState(getViewMonthFromValue(value))\n\n    const startDateLabelledby = `startDate-labelledby-${id}`\n    const endDateLabelledby = `endDate-labelledby-${id}`\n\n    const dateTexts = useMemo(() => {\n      const getText = getTextForDate(value, dateStringFormat, locale)\n      return {\n        from: getText('from'),\n        to: getText('to'),\n      }\n    }, [value, dateStringFormat, locale])\n\n    // FROM state\n    const [fromTextInputValue, setFromTextInputValue] = useState(dateTexts.from)\n    useEffect(() => {\n      setFromTextInputValue(dateTexts.from)\n    }, [dateTexts.from])\n\n    const fromID = useID(id && `from-${id}`)\n\n    // TO state\n    const [toTextInputValue, setToTextInputValue] = useState(dateTexts.to)\n    useEffect(() => {\n      setToTextInputValue(dateTexts.to)\n    }, [dateTexts.to])\n\n    const toID = useID(id && `to-${id}`)\n\n    // Based on an event's target, get the endpoint by the id attribute\n    const getEndpoint = useCallback(\n      ({ id }: HTMLInputElement) => {\n        return id === fromID ? 'from' : 'to'\n      },\n      [fromID]\n    )\n\n    // Called from blur and enter key events, parse the date when user is done typing\n    const updateRangeFromInput = useCallback(\n      (currentTarget: HTMLInputElement) => {\n        const inputValue = currentTarget.value\n        const endpoint = getEndpoint(currentTarget)\n        let validationMessage = inputValue\n        const valueEndpoint = value[endpoint]\n\n        if (inputValue === '') {\n          // empty string is valid\n          validationMessage = ''\n          if (valueEndpoint) {\n            // Input has been cleared, remove the endpoint's date\n            const newRange = { ...value }\n            delete newRange[endpoint]\n            onChange(newRange)\n          }\n        } else {\n          const parsedValue = parseDateFromString(\n            inputValue,\n            locale,\n            dateStringFormat\n          )\n          // Check if the date has changed\n          if (parsedValue) {\n            // string was parse-able as a date\n            const newRange = { ...value, [endpoint]: parsedValue }\n            validationMessage =\n              newRange.from &&\n              newRange.to &&\n              !isBefore(newRange.from, newRange.to)\n                ? 'Invalid range'\n                : ''\n            if (!valueEndpoint || !isSameDay(valueEndpoint, parsedValue)) {\n              // User has entered a new and valid date â€“ call onChange\n              // with an updated range, and update the Calendar's viewMonth\n              setViewMonth(parsedValue)\n              onChange(newRange)\n            }\n          }\n        }\n        if (validationMessage && isFunction(onValidationFail)) {\n          onValidationFail(validationMessage)\n        }\n      },\n      [dateStringFormat, getEndpoint, locale, onChange, onValidationFail, value]\n    )\n\n    const handleBlur = useCallback(\n      (e: FocusEvent<HTMLInputElement>) => {\n        updateRangeFromInput(e.currentTarget)\n      },\n      [updateRangeFromInput]\n    )\n\n    const handleKeyDown = useCallback(\n      (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n          // Don't submit a form if there is one\n          e.preventDefault()\n          // Update values when the user hits return\n          updateRangeFromInput(e.currentTarget)\n        }\n      },\n      [updateRangeFromInput]\n    )\n\n    const handleInputChange = (e: FormEvent<HTMLInputElement>) => {\n      const { currentTarget } = e\n      const { value } = currentTarget\n      const endpoint = getEndpoint(currentTarget)\n      if (endpoint === 'from') {\n        setFromTextInputValue(value)\n      } else {\n        setToTextInputValue(value)\n      }\n    }\n\n    // Calendar Popover\n    const { value: isOpen, change: setOpen, toggle } = useToggle()\n    // Update the Calendar viewMonth to reflect the current value\n    // each time the icon is clicked\n    const handleIconClick = useCallback(() => {\n      setViewMonth(getViewMonthFromValue(value))\n      toggle()\n    }, [toggle, value])\n\n    const { popover, ref: popoverRef } = usePopover({\n      content: (\n        <div>\n          <VisuallyHidden aria-live=\"assertive\">\n            {viewMonth ? formatDateString(viewMonth, 'MMMM-yyyy', locale) : ''}\n          </VisuallyHidden>\n          <Calendar\n            disabled={disabled}\n            locale={locale}\n            isRange\n            onSelectRange={onChange}\n            selectedRange={value}\n            viewMonth={viewMonth}\n            onMonthChange={setViewMonth}\n          />\n        </div>\n      ),\n      focusTrap: false,\n      isOpen,\n      placement: 'bottom-start',\n      ref,\n      setOpen,\n      triggerToggle: false,\n    })\n\n    // Props shared by both inputs\n    const commonInputProps: InlineInputTextProps = {\n      disabled,\n      fontSize: 'small',\n      onBlur: handleBlur,\n      onChange: handleInputChange,\n      onKeyDown: handleKeyDown,\n      readOnly,\n    }\n\n    return (\n      <InputTextGroupWrapper\n        ref={popoverRef}\n        disabled={disabled}\n        validationType={validationType}\n      >\n        <InlineInputTextBase\n          placeholder={t('Start date')}\n          data-testid=\"date-from-text-input\"\n          id={fromID}\n          value={fromTextInputValue}\n          aria-labelledby={`${ariaLabelledby} ${startDateLabelledby}`}\n          {...commonInputProps}\n        />\n        <HyphenWrapper hasInputValues={!isEmpty(value)} aria-hidden=\"true\">\n          &ndash;\n        </HyphenWrapper>\n        <VisuallyHidden id={endDateLabelledby}>{'End date'}</VisuallyHidden>\n        <InlineInputTextBase\n          placeholder={t('End date')}\n          data-testid=\"date-to-text-input\"\n          id={toID}\n          value={toTextInputValue}\n          aria-labelledby={`${ariaLabelledby} ${endDateLabelledby}`}\n          {...commonInputProps}\n        />\n        <Space gap=\"xxsmall\" justify=\"end\" pr=\"u2\">\n          <IconButton\n            size=\"xsmall\"\n            label={'Open calendar'}\n            icon={<CalendarToday />}\n            onClick={handleIconClick}\n            disabled={readOnly || disabled}\n          />\n          {validationType === 'error' && (\n            <InputTextContent pl=\"u1\">\n              <ErrorIcon />\n            </InputTextContent>\n          )}\n        </Space>\n        {popover}\n      </InputTextGroupWrapper>\n    )\n  })\n)``\n\nconst HyphenWrapper = styled.span<{ hasInputValues: boolean }>`\n  align-items: center;\n  color: ${({ theme, hasInputValues }) =>\n    hasInputValues ? theme.colors.text3 : theme.colors.text1};\n  display: flex;\n  .label-down & {\n    display: none;\n  }\n`\n\ninterface InputTextGroupWrapperProps {\n  disabled?: boolean\n  validationType?: 'error'\n}\n\nconst InputTextGroupWrapper = styled.div<InputTextGroupWrapperProps>`\n  ${inputCSS}\n  align-items: stretch;\n  display: flex;\n  font-family: ${({ theme }) => theme.fonts.body};\n  height: ${inputHeight};\n  justify-content: space-evenly;\n  padding: ${({ theme: { space } }) => `${space.u05} ${space.u1}`};\n  width: 100%;\n  &:hover {\n    ${inputTextHover}\n  }\n\n  &:focus-within {\n    ${inputTextFocus}\n  }\n\n  ${inputTextValidation}\n\n  ${({ disabled }) => disabled && inputTextDisabled}\n\n  input {\n    font-family: inherit;\n  }\n  ${InlineInputTextBase} {\n    flex-shrink: 0;\n    margin: ${({ theme }) => theme.space.u05} 0;\n    &:focus-within {\n      background: ${({ theme }) => theme.colors.keyAccent};\n    }\n    input,\n    span {\n      padding: 0 ${({ theme }) => theme.space.u2};\n    }\n  }\n`\n"],"mappings":"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"}