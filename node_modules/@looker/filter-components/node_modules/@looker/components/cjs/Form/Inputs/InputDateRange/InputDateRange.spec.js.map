{"version":3,"file":"InputDateRange.spec.js","names":["composeStories","stories","ExternalUpdates","realDateNow","Date","now","bind","global","beforeEach","jest","fn","afterEach","clearAllMocks","mockProps","onChange","onValidationFail","value","from","to","test","renderWithTheme","expect","screen","getByDisplayValue","toBeInTheDocument","fireEvent","click","getByText","getAllByText","toHaveLength","fromTextInput","change","target","blur","document","waitFor","openCalendar","not","toHaveBeenCalled","date","getByTestId","toTextInput","mock","calls","toMatchInlineSnapshot","fromInput","toHaveValue","newDate","toInput","startDate","endDate","dayBefore","dayAfter","toHaveAttribute","toHaveBeenCalledTimes","ital","describe","ko","en"],"sources":["../../../../../src/Form/Inputs/InputDateRange/InputDateRange.spec.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport React from 'react'\nimport { composeStories } from '@storybook/testing-react'\nimport { fireEvent, screen, waitFor } from '@testing-library/react'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport en from 'date-fns/locale/en-US'\nimport ital from 'date-fns/locale/it'\nimport ko from 'date-fns/locale/ko'\nimport { InputDateRange } from './InputDateRange'\nimport * as stories from './stories/index.stories'\n\nconst { ExternalUpdates } = composeStories(stories)\n\nconst realDateNow = Date.now.bind(global.Date)\n\nbeforeEach(() => {\n  /* eslint-disable-next-line @typescript-eslint/unbound-method */\n  global.Date.now = jest.fn(() => 1580567580000)\n})\n\nafterEach(() => {\n  /* eslint-disable-next-line @typescript-eslint/unbound-method */\n  global.Date.now = realDateNow\n  jest.clearAllMocks()\n})\n\nconst mockProps = {\n  onChange: jest.fn(),\n  onValidationFail: jest.fn(),\n  value: {\n    from: new Date('June 3, 2019'),\n    to: new Date('June 9, 2019'),\n  },\n}\n\ntest('value can be updated externally', () => {\n  renderWithTheme(<ExternalUpdates />)\n\n  expect(screen.getByDisplayValue('06/03/2019')).toBeInTheDocument()\n  fireEvent.click(screen.getByText('June 5 - 15, 2019')) // helper isDateRangeInView returns true\n\n  expect(screen.getByDisplayValue('06/15/2019')).toBeInTheDocument()\n  fireEvent.click(screen.getByText('January 1 - February 15, 2012')) // helper isDateRangeInView returns false\n\n  expect(screen.getByDisplayValue('01/01/2012')).toBeInTheDocument()\n})\n\ntest('user can change the selected date via text input field', () => {\n  renderWithTheme(<ExternalUpdates />)\n  fireEvent.click(screen.getByText('Open calendar'))\n\n  expect(screen.getAllByText('Jun 2019')).toHaveLength(2)\n\n  const fromTextInput = screen.getByDisplayValue('06/03/2019')\n  fireEvent.change(fromTextInput, { target: { value: '01/01/2012' } })\n  fireEvent.blur(fromTextInput) // update value on blur\n\n  expect(screen.getAllByText('Jan 2012')).toHaveLength(2)\n  // close the popover\n  fireEvent.click(document)\n})\n\ntest('gracefully accepts partial date range objects', async () => {\n  renderWithTheme(<ExternalUpdates />)\n  fireEvent.click(screen.getByText('From: February 9, 2021')) // helper isDateRangeInView returns false\n  fireEvent.click(screen.getByText('Open calendar'))\n\n  await waitFor(() => {\n    // Month picker button and month title\n    expect(screen.getAllByText('Feb 2021')).toHaveLength(2)\n  })\n})\n\ntest('calls onChange prop when a day is clicked', async () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n\n  const openCalendar = screen.getByText('Open calendar')\n\n  fireEvent.click(openCalendar)\n\n  await waitFor(() => {\n    expect(screen.getAllByText('4')[1]).toBeInTheDocument()\n  })\n\n  expect(mockProps.onChange).not.toHaveBeenCalled()\n\n  fireEvent.click(screen.getAllByText('4')[1]) // the 4th day of the month\n  fireEvent.click(screen.getAllByText('21')[1]) // the 21st day of the month\n\n  expect(mockProps.onChange).toHaveBeenCalled()\n})\n\ntest('selects a single day when clicking on one of the date endpoints', async () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n  expect(mockProps.onChange).not.toHaveBeenCalled()\n\n  const openCalendar = screen.getByText('Open calendar')\n\n  fireEvent.click(openCalendar)\n  await waitFor(() => {\n    expect(screen.getAllByText('3')[1]).toBeInTheDocument()\n  })\n\n  const date = screen.getAllByText('3')[1]\n  fireEvent.click(date)\n\n  expect(mockProps.onChange).toHaveBeenCalled()\n})\n\ntest('user can clear the selected date by deleting text input content', () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n\n  const fromTextInput = screen.getByTestId('date-from-text-input')\n\n  fireEvent.change(fromTextInput, { target: { value: '' } })\n  fireEvent.blur(fromTextInput) // update value on blur\n\n  const toTextInput = screen.getByTestId('date-to-text-input')\n\n  fireEvent.change(toTextInput, { target: { value: '' } })\n  fireEvent.blur(toTextInput) // update value on blur\n\n  // Since InputDateRange must be externally controlled, each call\n  // will clear one endpoint but not both (since the value prop isn't changinge)\n  expect(mockProps.onChange.mock.calls).toMatchInlineSnapshot(`\n    Array [\n      Array [\n        Object {\n          \"to\": 2019-06-09T07:00:00.000Z,\n        },\n      ],\n      Array [\n        Object {\n          \"from\": 2019-06-03T07:00:00.000Z,\n        },\n      ],\n    ]\n  `)\n})\n\ntest('starts new range with from when exsting value has both from and', async () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n\n  const fromInput = screen.getByTestId(\n    'date-from-text-input'\n  ) as HTMLInputElement\n  expect(fromInput).toHaveValue('06/03/2019')\n\n  const openCalendar = screen.getByText('Open calendar')\n\n  fireEvent.click(openCalendar)\n\n  await waitFor(() => {\n    expect(screen.getAllByText('4')[1]).toBeInTheDocument()\n  })\n  const newDate = screen.getAllByText('1')[1] // the 1st day of the month in \"from\"\n\n  fireEvent.click(newDate)\n\n  expect(mockProps.onChange.mock.calls).toMatchInlineSnapshot(`\n    Array [\n      Array [\n        Object {\n          \"from\": 2019-06-01T07:00:00.000Z,\n          \"to\": 2019-06-09T07:00:00.000Z,\n        },\n      ],\n    ]\n  `)\n})\n\ntest('calls onChange prop when a TextInput is modified', () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n\n  const toInput = screen.getByTestId('date-to-text-input') as HTMLInputElement\n  const fromInput = screen.getByTestId(\n    'date-from-text-input'\n  ) as HTMLInputElement\n\n  expect(mockProps.onChange).not.toHaveBeenCalled()\n  fireEvent.change(fromInput, { target: { value: '6/15/2019' } })\n  fireEvent.blur(fromInput)\n\n  fireEvent.change(toInput, { target: { value: '6/25/2019' } })\n  fireEvent.blur(toInput)\n\n  expect(mockProps.onChange.mock.calls).toMatchInlineSnapshot(`\n    Array [\n      Array [\n        Object {\n          \"from\": 2019-06-15T07:00:00.000Z,\n          \"to\": 2019-06-09T07:00:00.000Z,\n        },\n      ],\n      Array [\n        Object {\n          \"from\": 2019-06-03T07:00:00.000Z,\n          \"to\": 2019-06-25T07:00:00.000Z,\n        },\n      ],\n    ]\n  `)\n  // First change triggers an invalid range because\n  // the from input is after the to input\n  expect(mockProps.onValidationFail.mock.calls).toMatchInlineSnapshot(`\n    Array [\n      Array [\n        \"Invalid range\",\n      ],\n    ]\n  `)\n})\n\ntest('selects the to when clicking a date after the from', async () => {\n  renderWithTheme(\n    <InputDateRange\n      {...mockProps}\n      value={{\n        from: new Date('June 3, 2019'),\n      }}\n    />\n  )\n\n  const fromInput = screen.getByTestId(\n    'date-from-text-input'\n  ) as HTMLInputElement\n  const toInput = screen.getByTestId('date-to-text-input') as HTMLInputElement\n  const openCalendar = screen.getByText('Open calendar')\n\n  expect(fromInput).toHaveValue('06/03/2019')\n  expect(toInput).toHaveValue('')\n\n  fireEvent.click(openCalendar)\n\n  await waitFor(() => {\n    expect(screen.getAllByText('15')[1]).toBeInTheDocument()\n  })\n  fireEvent.click(screen.getAllByText('15')[1])\n\n  expect(mockProps.onChange.mock.calls).toMatchInlineSnapshot(`\n    Array [\n      Array [\n        Object {\n          \"from\": 2019-06-15T07:00:00.000Z,\n        },\n      ],\n    ]\n  `)\n})\n\ntest('value prop fills TextInputs with correct dates', () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n\n  const fromInput = screen.getByTestId(\n    'date-from-text-input'\n  ) as HTMLInputElement\n  const toInput = screen.getByTestId('date-to-text-input') as HTMLInputElement\n\n  expect(fromInput).toHaveValue('06/03/2019')\n  expect(toInput).toHaveValue('06/09/2019')\n})\n\n// getByLabelText doesn't return aria-label value not sure how to select the specific date\ntest('value highlights the correct dates in the Calendar', async () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n\n  const openCalendar = screen.getByText('Open calendar')\n\n  fireEvent.click(openCalendar)\n\n  await waitFor(() => {\n    expect(screen.getAllByText('3')[1]).toBeInTheDocument()\n  })\n\n  const startDate = screen.getAllByText('3')[1]\n  const endDate = screen.getAllByText('9')[1]\n  const dayBefore = screen.getAllByText('2')[1]\n  const dayAfter = screen.getAllByText('10')[1]\n\n  expect(startDate).toHaveAttribute('aria-selected', 'true')\n  expect(endDate).toHaveAttribute('aria-selected', 'true')\n\n  expect(dayBefore).toHaveAttribute('aria-selected', 'false')\n  expect(dayAfter).toHaveAttribute('aria-selected', 'false')\n})\n\ntest('validates FROM text input to match localized date format', () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n  const fromInput = screen.getByTestId(\n    'date-from-text-input'\n  ) as HTMLInputElement\n\n  fireEvent.change(fromInput, { target: { value: '6/3/2019' } })\n  fireEvent.blur(fromInput) // validate on blur\n\n  expect(mockProps.onValidationFail).not.toHaveBeenCalled()\n\n  fireEvent.change(fromInput, { target: { value: 'not-a-valid-date' } })\n  fireEvent.blur(fromInput) // validate on blur\n\n  expect(mockProps.onValidationFail).toHaveBeenCalledTimes(1)\n})\n\ntest('validates TO text input to match localized date format', () => {\n  renderWithTheme(<InputDateRange {...mockProps} />)\n  const toInput = screen.getByTestId('date-to-text-input') as HTMLInputElement\n\n  fireEvent.change(toInput, { target: { value: '6/15/2019' } })\n  fireEvent.blur(toInput) // validate on blur\n  expect(mockProps.onValidationFail).not.toHaveBeenCalled()\n\n  fireEvent.change(toInput, { target: { value: 'nope-not-valid' } })\n  fireEvent.blur(toInput) // validate on blur\n\n  expect(mockProps.onValidationFail).toHaveBeenCalledTimes(1)\n})\n\ntest('localizes calendar', () => {\n  renderWithTheme(\n    <InputDateRange dateStringFormat=\"MMMM-dd\" locale={ital} {...mockProps} />\n  )\n\n  expect(screen.getByText('giugno-03')).toBeInTheDocument()\n  expect(screen.getByText('giugno-09')).toBeInTheDocument()\n})\n\ndescribe('localizes text input', () => {\n  test('Korean', () => {\n    renderWithTheme(\n      <InputDateRange\n        locale={ko}\n        value={{\n          from: new Date(Date.now()),\n          to: new Date('May 2, 2020'),\n        }}\n        onChange={jest.fn()}\n      />\n    )\n    expect(screen.getByDisplayValue('2020.02.01')).toBeInTheDocument()\n  })\n  test('Italian', () => {\n    renderWithTheme(\n      <InputDateRange\n        locale={ital}\n        value={{\n          from: new Date(Date.now()),\n          to: new Date('May 2, 2020'),\n        }}\n        onChange={jest.fn()}\n      />\n    )\n    expect(screen.getByDisplayValue('01/02/2020')).toBeInTheDocument()\n  })\n  test('English', () => {\n    renderWithTheme(\n      <InputDateRange\n        locale={en}\n        value={{\n          from: new Date(Date.now()),\n          to: new Date('May 2, 2020'),\n        }}\n        onChange={jest.fn()}\n      />\n    )\n    expect(screen.getByDisplayValue('02/01/2020')).toBeInTheDocument()\n  })\n})\n"],"mappings":"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"}