{"version":3,"file":"DrawerSurface.js","names":["placement","variant","prop","variants","left","boxShadow","right","drawerWidth","drawerSizes","asideSizes","dialogSizes","system","width","defaultScale","property","scale","slideIn","keyframes","slideOut","DrawerSurface","styled","SurfaceBase","attrs","surfaceTransition"],"sources":["../../../src/Drawer/DrawerSurface.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { Keyframes } from 'styled-components'\nimport styled, { keyframes } from 'styled-components'\nimport type { ResponsiveValue } from '@looker/design-tokens'\nimport { variant, system } from '@looker/design-tokens'\nimport { SurfaceBase, surfaceTransition } from '../Dialog/SurfaceBase'\nimport type { DialogSizeRamp } from '../Dialog/dialogWidth'\nimport { dialogSizes } from '../Dialog/dialogWidth'\nimport type { AsideSizeRamp } from '../Layout/Semantics/Aside/asideWidth'\nimport { asideSizes } from '../Layout/Semantics/Aside/asideWidth'\n\nexport type DrawerPlacements = 'left' | 'right'\nexport type DialogDrawerWidth = ResponsiveValue<\n  DialogSizeRamp | AsideSizeRamp | string\n>\n\nexport interface DrawerSurfaceProps {\n  /**\n   * Specify the edge to attach the Drawer surface to - `left` or `right`\n   * @default right\n   */\n  placement?: DrawerPlacements\n\n  /**\n   * Explicitly specifying a width will set the Surface to be the lesser of\n   * the specified width or the viewport width.\n   * @default medium\n   */\n  width?: DialogDrawerWidth\n}\n\n/* eslint-disable sort-keys-fix/sort-keys-fix */\nconst placement = variant({\n  prop: 'placement',\n  variants: {\n    left: {\n      boxShadow: '-18px 0 18px -18px rgba(0, 0, 0, 0.12)',\n      left: 0,\n    },\n    right: {\n      boxShadow: '-18px 0 18px -18px rgba(0, 0, 0, 0.12)',\n      right: 0,\n    },\n  },\n})\n/* eslint-enable sort-keys-fix/sort-keys-fix */\n\nconst drawerWidth = () => {\n  const drawerSizes = {\n    ...asideSizes,\n    ...dialogSizes,\n  }\n  return system({\n    width: {\n      defaultScale: drawerSizes,\n      property: 'width',\n      scale: 'drawerSizes',\n    },\n  })\n}\n\nconst slideIn: Keyframes = keyframes`\nfrom {\n  opacity: 0.01;\n  transform: translate(var(--direction-translate, 0), 0);\n}\nto {\n  opacity: 1;\n  transform: translate(0);\n}\n`\nconst slideOut: Keyframes = keyframes`\n  from {\n    opacity: 1;\n    transform: translate(0);\n  }\n  to {\n    opacity: 0.01;\n    transform: translate(var(--direction-translate, 0), 0);\n  }\n`\n\nexport const DrawerSurface = styled(SurfaceBase).attrs<DrawerSurfaceProps>(\n  ({ placement = 'right', width = 'small' }) => ({\n    placement,\n    width,\n  })\n)<DrawerSurfaceProps>`\n  --direction-translate: ${({ placement }) =>\n    placement === 'left' ? '-100%' : '100%'};\n\n  /* Shadow designed to match theme.elevations.plus3 but with a single left-side shadow */\n  height: 100%;\n  position: absolute;\n\n  ${placement}\n  ${drawerWidth}\n\n  &.entering {\n    animation: ${slideIn} ${surfaceTransition};\n  }\n  &.exiting {\n    animation: ${slideOut} ${surfaceTransition};\n  }\n`\n"],"mappings":";;;;;;;;;;;;;;;AA2BA;;AAEA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;AAuBA,IAAMA,SAAS,GAAG,IAAAC,qBAAA,EAAQ;EACxBC,IAAI,EAAE,WADkB;EAExBC,QAAQ,EAAE;IACRC,IAAI,EAAE;MACJC,SAAS,EAAE,wCADP;MAEJD,IAAI,EAAE;IAFF,CADE;IAKRE,KAAK,EAAE;MACLD,SAAS,EAAE,wCADN;MAELC,KAAK,EAAE;IAFF;EALC;AAFc,CAAR,CAAlB;;AAeA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;EACxB,IAAMC,WAAW,mCACZC,sBADY,GAEZC,wBAFY,CAAjB;;EAIA,OAAO,IAAAC,oBAAA,EAAO;IACZC,KAAK,EAAE;MACLC,YAAY,EAAEL,WADT;MAELM,QAAQ,EAAE,OAFL;MAGLC,KAAK,EAAE;IAHF;EADK,CAAP,CAAP;AAOD,CAZD;;AAcA,IAAMC,OAAkB,OAAGC,2BAAH,qOAAxB;AAUA,IAAMC,QAAmB,OAAGD,2BAAH,uPAAzB;AAWO,IAAME,aAAa,GAAG,IAAAC,4BAAA,EAAOC,wBAAP,EAAoBC,KAApB,CAC3B;EAAA,0BAAGtB,SAAH;EAAA,IAAGA,SAAH,+BAAe,OAAf;EAAA,sBAAwBY,KAAxB;EAAA,IAAwBA,KAAxB,2BAAgC,OAAhC;EAAA,OAA+C;IAC7CZ,SAAS,EAATA,SAD6C;IAE7CY,KAAK,EAALA;EAF6C,CAA/C;AAAA,CAD2B,CAAH;EAAA;EAAA;AAAA,sXAMC;EAAA,IAAGZ,SAAH,SAAGA,SAAH;EAAA,OACvBA,SAAS,KAAK,MAAd,GAAuB,OAAvB,GAAiC,MADV;AAAA,CAND,EAatBA,SAbsB,EActBO,WAdsB,EAiBTS,OAjBS,EAiBEO,8BAjBF,EAoBTL,QApBS,EAoBGK,8BApBH,CAAnB"}