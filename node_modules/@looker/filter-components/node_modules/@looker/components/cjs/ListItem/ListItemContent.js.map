{"version":3,"file":"ListItemContent.js","names":["Button","styled","button","attrs","type","Link","a","Div","div","listItemContentCSS","style","css","listItemLabelCSS","ListItemContent","forwardRef","forwardedRef","className","children","color","itemRole","ripple","selected","props","useBoundedRipple","listItemColorOptions","includes","ref","callbacks","rippleRestProps","rippleHandlers","useRippleHandlers","pick","rippleHandlerKeys","disabled","rippleProps","listItemBackgroundColor","rippleStyle","cursorPointer","undefined","density","listItemPaddingX"],"sources":["../../../src/ListItem/ListItemContent.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport pick from 'lodash/pick'\nimport type {\n  CompatibleHTMLProps,\n  DensityRamp,\n  ExtendedStatefulColor,\n} from '@looker/design-tokens'\nimport type { Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport type {\n  FlattenSimpleInterpolation,\n  Interpolation,\n} from 'styled-components'\nimport styled, { css } from 'styled-components'\nimport {\n  rippleHandlerKeys,\n  rippleStyle,\n  useBoundedRipple,\n  useRippleHandlers,\n} from '../Ripple'\nimport type {\n  ListItemColorProp,\n  ListItemRole,\n  ListItemStatefulProps,\n} from './types'\nimport { listItemColorOptions } from './types'\nimport { listItemBackgroundColor, listItemPaddingX } from './utils'\n\nconst Button = styled.button.attrs(({ type = 'button' }) => ({\n  type,\n}))`\n  font-family: inherit;\n`\nconst Link = styled.a``\nconst Div = styled.div``\n\n// Use listItemLabelCSS to target the internal button / link / div CSS of ListItem\nexport const listItemContentCSS = (\n  style: FlattenSimpleInterpolation | Interpolation<unknown>\n) => css`\n  > ${Button}, > ${Link}, > ${Div} {\n    ${style}\n  }\n`\n\n/**\n * @deprecated Use `listItemContentCSS` instead\n */\nexport const listItemLabelCSS = listItemContentCSS\n\nexport type ListItemContentProps = CompatibleHTMLProps<HTMLElement> &\n  ListItemStatefulProps &\n  ListItemColorProp & {\n    cursorPointer?: boolean\n    density?: DensityRamp\n    disabled?: boolean\n    itemRole?: ListItemRole\n    /**\n     * Determines if ripple effect is enabled or disabled.\n     * Used primarily when parent component should handle\n     * ripple effect like with NavTree.\n     * @default true\n     */\n    ripple?: boolean\n  }\n\nexport const ListItemContent = styled(\n  forwardRef(\n    (\n      {\n        className,\n        children,\n        color,\n        itemRole = 'button',\n        ripple = true,\n        selected,\n        style,\n        ...props\n      }: ListItemContentProps,\n      forwardedRef: Ref<HTMLElement>\n    ) => {\n      const { callbacks, ...rippleRestProps } = useBoundedRipple({\n        className,\n        color:\n          selected &&\n          listItemColorOptions.includes(color as ExtendedStatefulColor)\n            ? (color as ExtendedStatefulColor)\n            : 'neutral',\n        ref: forwardedRef,\n        style,\n      })\n\n      const rippleHandlers = useRippleHandlers(\n        callbacks,\n        pick(props, rippleHandlerKeys),\n        props.disabled\n      )\n\n      const rippleProps = ripple\n        ? {\n            ...rippleRestProps,\n            ...rippleHandlers,\n          }\n        : { className, style }\n\n      if (!props.disabled && itemRole === 'link') {\n        return (\n          <Link\n            ref={forwardedRef as Ref<HTMLAnchorElement>}\n            {...props}\n            {...rippleProps}\n          >\n            {children}\n          </Link>\n        )\n      } else if (itemRole === 'none') {\n        return (\n          <Div\n            ref={forwardedRef as Ref<HTMLDivElement>}\n            {...props}\n            {...rippleProps}\n          >\n            {children}\n          </Div>\n        )\n      }\n\n      return (\n        <Button\n          ref={forwardedRef as Ref<HTMLButtonElement>}\n          {...props}\n          {...rippleProps}\n          type=\"button\"\n        >\n          {children}\n        </Button>\n      )\n    }\n  )\n)`\n  ${listItemBackgroundColor}\n  ${rippleStyle}\n\n  align-items: center;\n  border: none;\n  color: inherit;\n  cursor: ${({ cursorPointer }) => (cursorPointer ? 'pointer' : undefined)};\n  display: flex;\n  flex: 1;\n  font-size: inherit;\n  font-weight: inherit;\n  margin: 0; /* safari has default margin */\n  min-width: 0;\n  outline: none;\n\n  padding: 0; /* Remove default top and bottom padding */\n  ${({ density }) => listItemPaddingX(density)}\n\n  /*\n    Supports absolutely positioned box-shadow\n  */\n  position: relative;\n\n  text-align: left;\n  text-decoration: none;\n  width: 100%;\n\n  &:hover,\n  &:focus {\n    color: inherit;\n    text-decoration: none;\n  }\n`\n"],"mappings":";;;;;;;;;;;;;;;;;;;AA0BA;;AAOA;;AAKA;;AACA;;AAWA;;AACA;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,4BAAA,CAAOC,MAAP,CAAcC,KAAd,CAAoB;EAAA,qBAAGC,IAAH;EAAA,IAAGA,IAAH,0BAAU,QAAV;EAAA,OAA0B;IAC3DA,IAAI,EAAJA;EAD2D,CAA1B;AAAA,CAApB,CAAH;EAAA;EAAA;AAAA,mHAAZ;;AAKA,IAAMC,IAAI,GAAGJ,4BAAA,CAAOK,CAAV;EAAA;EAAA;AAAA,0FAAV;;AACA,IAAMC,GAAG,GAAGN,4BAAA,CAAOO,GAAV;EAAA;EAAA;AAAA,0FAAT;;AAGO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAChCC,KADgC;EAAA,WAE7BC,qBAF6B,uIAG5BX,MAH4B,EAGfK,IAHe,EAGJE,GAHI,EAI5BG,KAJ4B;AAAA,CAA3B;;;AAWA,IAAME,gBAAgB,GAAGH,kBAAzB;;AAkBA,IAAMI,eAAe,GAAG,IAAAZ,4BAAA,EAC7B,IAAAa,iBAAA,EACE,iBAWEC,YAXF,EAYK;EAAA,IAVDC,SAUC,SAVDA,SAUC;EAAA,IATDC,QASC,SATDA,QASC;EAAA,IARDC,KAQC,SARDA,KAQC;EAAA,2BAPDC,QAOC;EAAA,IAPDA,QAOC,+BAPU,QAOV;EAAA,yBANDC,MAMC;EAAA,IANDA,MAMC,6BANQ,IAMR;EAAA,IALDC,QAKC,SALDA,QAKC;EAAA,IAJDX,KAIC,SAJDA,KAIC;EAAA,IAHEY,KAGF;;EACH,wBAA0C,IAAAC,wBAAA,EAAiB;IACzDP,SAAS,EAATA,SADyD;IAEzDE,KAAK,EACHG,QAAQ,IACRG,2BAAA,CAAqBC,QAArB,CAA8BP,KAA9B,CADA,GAEKA,KAFL,GAGI,SANmD;IAOzDQ,GAAG,EAAEX,YAPoD;IAQzDL,KAAK,EAALA;EARyD,CAAjB,CAA1C;EAAA,IAAQiB,SAAR,qBAAQA,SAAR;EAAA,IAAsBC,eAAtB;;EAWA,IAAMC,cAAc,GAAG,IAAAC,yBAAA,EACrBH,SADqB,EAErB,IAAAI,gBAAA,EAAKT,KAAL,EAAYU,yBAAZ,CAFqB,EAGrBV,KAAK,CAACW,QAHe,CAAvB;EAMA,IAAMC,WAAW,GAAGd,MAAM,mCAEjBQ,eAFiB,GAGjBC,cAHiB,IAKtB;IAAEb,SAAS,EAATA,SAAF;IAAaN,KAAK,EAALA;EAAb,CALJ;;EAOA,IAAI,CAACY,KAAK,CAACW,QAAP,IAAmBd,QAAQ,KAAK,MAApC,EAA4C;IAC1C,OACE,gCAAC,IAAD;MACE,GAAG,EAAEJ;IADP,GAEMO,KAFN,EAGMY,WAHN,GAKGjB,QALH,CADF;EASD,CAVD,MAUO,IAAIE,QAAQ,KAAK,MAAjB,EAAyB;IAC9B,OACE,gCAAC,GAAD;MACE,GAAG,EAAEJ;IADP,GAEMO,KAFN,EAGMY,WAHN,GAKGjB,QALH,CADF;EASD;;EAED,OACE,gCAAC,MAAD;IACE,GAAG,EAAEF;EADP,GAEMO,KAFN,EAGMY,WAHN;IAIE,IAAI,EAAC;EAJP,IAMGjB,QANH,CADF;AAUD,CAtEH,CAD6B,CAAH;EAAA;EAAA;AAAA,soBA0ExBkB,8BA1EwB,EA2ExBC,mBA3EwB,EAgFhB;EAAA,IAAGC,aAAH,SAAGA,aAAH;EAAA,OAAwBA,aAAa,GAAG,SAAH,GAAeC,SAApD;AAAA,CAhFgB,EA0FxB;EAAA,IAAGC,OAAH,SAAGA,OAAH;EAAA,OAAiB,IAAAC,uBAAA,EAAiBD,OAAjB,CAAjB;AAAA,CA1FwB,CAArB"}