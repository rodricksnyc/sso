import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";
var _excluded = ["y_axes", "y_axis"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import omitBy from 'lodash/omitBy';
import isNull from 'lodash/isNull';
export var yAxisRange = function yAxisRange(_ref) {
  var config = _ref.config,
      data = _ref.data,
      fields = _ref.fields;

  var _config$y_axes = config.y_axes,
      y_axis_raw = _config$y_axes === void 0 ? [{}] : _config$y_axes,
      _config$y_axis = config.y_axis,
      y_axis = _config$y_axis === void 0 ? [{}] : _config$y_axis,
      restConfig = _objectWithoutProperties(config, _excluded);

  var longestListLength = Math.max(y_axis_raw.length, y_axis.length);
  var yAxisWithDefaults = [];

  for (var i = 0; i < longestListLength; i++) {
    var rawAxisAtPosition = omitBy(y_axis_raw[i] || {}, isNull);
    var officialAxisAtPosition = y_axis[i] || {};
    var minValue = rawAxisAtPosition.minValue,
        maxValue = rawAxisAtPosition.maxValue;
    var _officialAxisAtPositi = officialAxisAtPosition.range,
        range = _officialAxisAtPositi === void 0 ? [minValue === undefined ? 'auto' : minValue, maxValue === undefined ? 'auto' : maxValue] : _officialAxisAtPositi;
    yAxisWithDefaults[i] = _objectSpread(_objectSpread({}, officialAxisAtPosition), {}, {
      range: range
    });
  }

  return {
    config: _objectSpread(_objectSpread({}, restConfig), {}, {
      y_axis: yAxisWithDefaults
    }),
    data: data,
    fields: fields
  };
};
//# sourceMappingURL=yAxisRange.js.map