{"version":3,"file":"ComboboxInput.js","names":["omit","React","forwardRef","useRef","useContext","styled","css","useForkedRef","useSafeLayoutEffect","useWrapEvent","InputText","AdvancedInputControls","ComboboxContext","getComboboxText","makeHash","ComboboxActionType","ComboboxState","useInputEvents","useInputPropRefs","ComboboxInputInternal","props","forwardedRef","autoComplete","disabled","freeInput","clearIconLabel","inputReadOnly","isClearable","onChange","noErrorIcon","readOnly","summary","validationType","controlledValue","value","rest","data","navigationOption","option","contextInputValue","inputValue","contextOnChange","inputCallbackRef","inputElement","state","transition","id","isVisible","ref","isControlled","undefined","handleClear","CLEAR","focus","handleValueChange","CHANGE","isInputting","current","CHANGE_SILENT","handleChange","event","currentTarget","requestAnimationFrame","inputOption","NAVIGATING","INTERACTING","wrappedOnChange","inputEvents","String","displayName","comboboxStyles","ComboboxInput","attrs","width"],"sources":["../../../../src/Form/Inputs/Combobox/ComboboxInput.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\n// Much of the following is pulled from https://github.com/reach/reach-ui\n// because their work is fantastic (but is not in TypeScript)\n\nimport omit from 'lodash/omit'\nimport type { FormEvent, Ref } from 'react'\nimport React, { forwardRef, useRef, useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useForkedRef, useSafeLayoutEffect, useWrapEvent } from '../../../utils'\nimport { InputText } from '../InputText'\nimport { AdvancedInputControls } from '../AdvancedInputControls'\nimport { ComboboxContext } from './ComboboxContext'\nimport type { ComboboxInputProps } from './types'\nimport { getComboboxText } from './utils/getComboboxText'\nimport { makeHash } from './utils/makeHash'\nimport { ComboboxActionType, ComboboxState } from './utils/state'\nimport { useInputEvents } from './utils/useInputEvents'\nimport { useInputPropRefs } from './utils/useInputPropRefs'\n\nexport const ComboboxInputInternal = forwardRef(\n  (props: ComboboxInputProps, forwardedRef: Ref<HTMLInputElement>) => {\n    const {\n      // updates the value in the input when navigating w/ the keyboard\n      autoComplete = true,\n      disabled,\n      freeInput,\n      clearIconLabel,\n      inputReadOnly = false,\n      isClearable,\n      // wrapped events\n      onChange,\n      noErrorIcon,\n      readOnly = false,\n      summary,\n      validationType,\n      // might be controlled\n      value: controlledValue,\n      ...rest\n    } = props\n\n    const {\n      data: { navigationOption, option, inputValue: contextInputValue },\n      onChange: contextOnChange,\n      inputCallbackRef,\n      inputElement,\n      state,\n      transition,\n      id,\n      isVisible,\n    } = useContext(ComboboxContext)\n\n    useInputPropRefs(props, ComboboxContext)\n\n    const ref = useForkedRef<HTMLInputElement>(inputCallbackRef, forwardedRef)\n\n    const isControlled = controlledValue !== undefined\n\n    function handleClear() {\n      contextOnChange && contextOnChange(undefined)\n      transition && transition(ComboboxActionType.CLEAR)\n      inputElement?.focus()\n    }\n\n    function handleValueChange(value: string) {\n      transition && transition(ComboboxActionType.CHANGE, { inputValue: value })\n    }\n\n    // Need to determine whether the updated value come from change event on the input\n    // or from a new value prop (controlled)\n    const isInputting = useRef(false)\n    // If they are controlling the value we still need to do our transitions, so\n    // we have this derived state to emulate onChange of the input as we receive\n    // new `value`s ...[*]\n    useSafeLayoutEffect(() => {\n      if (controlledValue !== undefined) {\n        if (isInputting.current) {\n          handleValueChange(controlledValue)\n        } else {\n          // this is most likely the initial value so we want to\n          // update the value without transitioning to suggesting\n          transition &&\n            transition(ComboboxActionType.CHANGE_SILENT, {\n              inputValue: controlledValue,\n            })\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [controlledValue])\n\n    // [*]... and when controlled, we don't trigger handleValueChange as the user\n    // types, instead the developer controls it with the normal input onChange\n    // prop\n    function handleChange(event: FormEvent<HTMLInputElement>) {\n      isInputting.current = true\n      if (!isControlled) {\n        handleValueChange(event.currentTarget.value)\n      }\n      requestAnimationFrame(() => {\n        isInputting.current = false\n      })\n    }\n\n    let inputOption =\n      contextInputValue !== undefined ? contextInputValue : option\n\n    if (\n      autoComplete &&\n      (state === ComboboxState.NAVIGATING ||\n        state === ComboboxState.INTERACTING)\n    ) {\n      // When idle, we don't have a navigationOption on ArrowUp/Down\n      inputOption = navigationOption || option\n    }\n    const inputValue =\n      controlledValue !== undefined\n        ? controlledValue\n        : getComboboxText(inputOption)\n\n    const wrappedOnChange = useWrapEvent(handleChange, onChange)\n\n    const inputEvents = useInputEvents(props, ComboboxContext)\n\n    return (\n      <InputText\n        {...omit(rest, 'selectOnClick')}\n        {...inputEvents}\n        disabled={disabled}\n        after={\n          <AdvancedInputControls\n            disabled={disabled}\n            clearIconLabel={clearIconLabel}\n            isVisibleOptions={isVisible}\n            onClear={handleClear}\n            showCaret={!freeInput}\n            showClear={!!(isClearable && inputValue) && !disabled && !readOnly}\n            summary={summary}\n            errorIcon={!noErrorIcon && validationType === 'error'}\n          />\n        }\n        ref={ref}\n        value={inputValue}\n        readOnly={inputReadOnly || readOnly}\n        onChange={wrappedOnChange}\n        id={`listbox-input-${id}`}\n        autoComplete=\"off\"\n        aria-autocomplete=\"both\"\n        validationType={validationType}\n        aria-activedescendant={\n          navigationOption\n            ? String(makeHash(navigationOption ? navigationOption.value : ''))\n            : undefined\n        }\n      />\n    )\n  }\n)\n\nComboboxInputInternal.displayName = 'ComboboxInputInternal'\n\nexport const comboboxStyles = css<{ inputReadOnly?: boolean }>`\n  ${({ inputReadOnly }) =>\n    inputReadOnly\n      ? css`\n          cursor: default;\n          input {\n            cursor: default;\n          }\n        `\n      : ''}\n`\n\nexport const ComboboxInput = styled(ComboboxInputInternal).attrs(\n  ({ width = '100%' }) => ({\n    width,\n  })\n)`\n  ${comboboxStyles}\n`\n"],"mappings":"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"}