"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.legendPosition = void 0;
const _excluded = ["hide_legend", "legend_position", "legend"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const legendPosition = ({
  config,
  data,
  fields
}) => {
  const hide_legend = config.hide_legend,
        legend_position = config.legend_position,
        legend = config.legend,
        restConfig = _objectWithoutProperties(config, _excluded);

  const DEFAULT_POSITION = config.type === 'pie' ? 'right' : 'bottom';
  const LEGEND_POSITION = {
    '': DEFAULT_POSITION,
    bottom: 'bottom',
    center: DEFAULT_POSITION,
    left: 'left',
    right: 'right',
    top: 'top'
  };
  const positionValue = LEGEND_POSITION[legend && legend.position || legend_position || ''];
  return {
    config: _objectSpread(_objectSpread({}, restConfig), {}, {
      legend: hide_legend === true || legend === false ? false : _objectSpread(_objectSpread({}, legend), {}, {
        position: positionValue
      })
    }),
    data,
    fields
  };
};

exports.legendPosition = legendPosition;
//# sourceMappingURL=legendPosition.js.map