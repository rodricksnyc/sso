"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getVisibleMeasureNames = void 0;

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.array.map.js");

var _isArray = _interopRequireDefault(require("lodash/isArray"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const defaultFields = {
  dimensions: [],
  measures: []
};

const getVisibleMeasureNames = (fields = defaultFields, config) => {
  const _fields$measures = fields.measures,
        measures = _fields$measures === void 0 ? [] : _fields$measures;
  const visibleMeasures = measures.filter((measure, index) => {
    if (config.series) {
      var _config$series, _config$series$index, _config$series2, _config$series2$measu;

      return (0, _isArray.default)(config.series) ? config === null || config === void 0 ? void 0 : (_config$series = config.series) === null || _config$series === void 0 ? void 0 : (_config$series$index = _config$series[index]) === null || _config$series$index === void 0 ? void 0 : _config$series$index.visible : config === null || config === void 0 ? void 0 : (_config$series2 = config.series) === null || _config$series2 === void 0 ? void 0 : (_config$series2$measu = _config$series2[measure.name]) === null || _config$series2$measu === void 0 ? void 0 : _config$series2$measu.visible;
    }

    return true;
  });
  return visibleMeasures.map(measure => measure.name);
};

exports.getVisibleMeasureNames = getVisibleMeasureNames;
//# sourceMappingURL=getVisibleMeasureNames.js.map