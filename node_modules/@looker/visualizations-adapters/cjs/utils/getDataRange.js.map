{"version":3,"file":"getDataRange.js","names":["getDataRange","config","data","fields","positioning","eligibleMeasures","measures","filter","measure","index","is_numeric","series","isArray","visible","name","map","range","reduce","draftRange","datum","currentMin","currentMax","datumValues","accumulatedValue","add","newMax","Math","max","newMin","min","Infinity"],"sources":["../../../src/utils/getDataRange.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport isArray from 'lodash/isArray'\nimport add from 'lodash/add'\nimport type { CCartesian, Fields, SDKRecord } from '../types'\n\nexport type GetDataRangeProps = {\n  config: CCartesian\n  data: SDKRecord[]\n  fields: Fields\n}\n\n/**\n * Returns the minimum and maximum numeric value from a data array\n *\n * Used by XYChart types to calculate y-axis range\n */\nexport const getDataRange = ({\n  config,\n  data,\n  fields,\n}: GetDataRangeProps): [number, number] => {\n  const { positioning } = config\n\n  const eligibleMeasures = fields.measures\n    .filter((measure, index) => {\n      // Early exit if measure isn't numeric\n      if (!measure.is_numeric) return false\n\n      /**\n       * Because config.series is optional, we need to check for its existence\n       * before including it in visibility logic.\n       */\n\n      if (config.series) {\n        return isArray(config.series)\n          ? config?.series?.[index]?.visible\n          : config?.series?.[measure.name]?.visible\n      }\n\n      /**\n       * If we get here, we don't have enough information to hide the given series,\n       * so just return true\n       */\n      return true\n    })\n    .map(measure => measure.name)\n\n  const range = data.reduce(\n    (draftRange, datum) => {\n      const [currentMin, currentMax] = draftRange as [number, number]\n      const datumValues = eligibleMeasures.map(name => datum[name])\n\n      // add all datum values together when rendering in stacking mode\n      const accumulatedValue: number = datumValues.reduce(add, 0)\n\n      const newMax = Math.max(\n        ...(positioning === 'stacked' ? [accumulatedValue] : datumValues),\n        currentMax\n      )\n      const newMin = Math.min(\n        ...(positioning === 'stacked' ? [accumulatedValue] : datumValues),\n        currentMin\n      )\n\n      return [newMin, newMax]\n    },\n    [Infinity, -Infinity]\n  ) as [number, number]\n\n  return range\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AA0BA;;AACA;;;;;;;;;;;;;;;;AAcO,MAAMA,YAAY,GAAG,CAAC;EAC3BC,MAD2B;EAE3BC,IAF2B;EAG3BC;AAH2B,CAAD,KAIe;EACzC,MAAQC,WAAR,GAAwBH,MAAxB,CAAQG,WAAR;EAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,QAAP,CACtBC,MADsB,CACf,CAACC,OAAD,EAAUC,KAAV,KAAoB;IAE1B,IAAI,CAACD,OAAO,CAACE,UAAb,EAAyB,OAAO,KAAP;;IAOzB,IAAIT,MAAM,CAACU,MAAX,EAAmB;MAAA;;MACjB,OAAO,IAAAC,gBAAA,EAAQX,MAAM,CAACU,MAAf,IACHV,MADG,aACHA,MADG,yCACHA,MAAM,CAAEU,MADL,2EACH,eAAiBF,KAAjB,CADG,yDACH,qBAAyBI,OADtB,GAEHZ,MAFG,aAEHA,MAFG,0CAEHA,MAAM,CAAEU,MAFL,6EAEH,gBAAiBH,OAAO,CAACM,IAAzB,CAFG,0DAEH,sBAAgCD,OAFpC;IAGD;;IAMD,OAAO,IAAP;EACD,CArBsB,EAsBtBE,GAtBsB,CAsBlBP,OAAO,IAAIA,OAAO,CAACM,IAtBD,CAAzB;EAwBA,MAAME,KAAK,GAAGd,IAAI,CAACe,MAAL,CACZ,CAACC,UAAD,EAAaC,KAAb,KAAuB;IACrB,aAAiCD,UAAjC;IAAA;IAAA,MAAOE,UAAP;IAAA,MAAmBC,UAAnB;;IACA,MAAMC,WAAW,GAAGjB,gBAAgB,CAACU,GAAjB,CAAqBD,IAAI,IAAIK,KAAK,CAACL,IAAD,CAAlC,CAApB;IAGA,MAAMS,gBAAwB,GAAGD,WAAW,CAACL,MAAZ,CAAmBO,YAAnB,EAAwB,CAAxB,CAAjC;IAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CACb,IAAIvB,WAAW,KAAK,SAAhB,GAA4B,CAACmB,gBAAD,CAA5B,GAAiDD,WAArD,CADa,EAEbD,UAFa,CAAf;IAIA,MAAMO,MAAM,GAAGF,IAAI,CAACG,GAAL,CACb,IAAIzB,WAAW,KAAK,SAAhB,GAA4B,CAACmB,gBAAD,CAA5B,GAAiDD,WAArD,CADa,EAEbF,UAFa,CAAf;IAKA,OAAO,CAACQ,MAAD,EAASH,MAAT,CAAP;EACD,CAlBW,EAmBZ,CAACK,QAAD,EAAW,CAACA,QAAZ,CAnBY,CAAd;EAsBA,OAAOd,KAAP;AACD,CAtDM"}