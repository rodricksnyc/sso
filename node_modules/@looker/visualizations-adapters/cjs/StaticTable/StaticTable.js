"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StaticTable = void 0;

require("core-js/modules/es.array.map.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.object.from-entries.js");

require("core-js/modules/es.object.entries.js");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _components = require("@looker/components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const StaticTable = ({
  data = [],
  fields = {
    dimensions: [],
    measures: []
  },
  width = 'auto'
}) => {
  if (!data.length) {
    return null;
  }

  const measureLabels = [...fields.measures].map(f => [f.name, f.view_label]);
  const dimensionLabels = [...fields.dimensions].map(f => [f.name, f.label_short]);
  const fieldLabels = Object.fromEntries([...dimensionLabels, ...measureLabels]);
  const formattedData = data.map(d => {
    return Object.fromEntries(Object.entries(d).map(([key, value]) => {
      return [key, value];
    }));
  });
  const resultKeys = Array.isArray(data) ? Object.keys(data[0]) : Object.keys(data);
  return _react.default.createElement(_components.Table, {
    width: width === 'auto' ? '100%' : `${width}px`,
    "data-testid": "table-chart"
  }, _react.default.createElement(_components.TableHead, null, _react.default.createElement(_components.TableRow, null, _react.default.createElement(_components.TableHeaderCell, null), resultKeys.map(key => _react.default.createElement(StyledTableHeaderCell, {
    key: key,
    width: "auto"
  }, fieldLabels[key])))), _react.default.createElement(_components.TableBody, null, Array.isArray(data) && formattedData.map((obj, i) => {
    return _react.default.createElement(_components.TableRow, {
      key: i
    }, _react.default.createElement(_components.TableDataCell, {
      textAlign: "right",
      color: "text1",
      width: "1px",
      pr: "small"
    }, i + 1), resultKeys.map(key => {
      const val = obj[key];
      let valHelper = val;

      if (typeof val === 'function') {
        valHelper = val();
      } else if (Object(val) === val) {
        valHelper = JSON.stringify(val);
      }

      return _react.default.createElement(_components.TableDataCell, {
        key: key
      }, valHelper);
    }));
  })));
};

exports.StaticTable = StaticTable;
const StyledTableHeaderCell = (0, _styledComponents.default)(_components.TableHeaderCell).withConfig({
  displayName: "StaticTable__StyledTableHeaderCell",
  componentId: "sc-15kcil2-0"
})(["&:first-child{max-width:0;min-width:0;}"]);
//# sourceMappingURL=StaticTable.js.map