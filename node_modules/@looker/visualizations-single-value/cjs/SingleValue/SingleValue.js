"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SingleValue = void 0;

var _react = _interopRequireDefault(require("react"));

var _numeral = _interopRequireDefault(require("numeral"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _visualizationsAdapters = require("@looker/visualizations-adapters");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const SingleValue = ({
  data,
  fields,
  width,
  height,
  config
}) => {
  if (!data) {
    return null;
  }

  const _config$series = config.series,
        series = _config$series === void 0 ? {} : _config$series;
  const name = fields.measures[0].name;
  const firstSeries = Array.isArray(series) ? series[0] : series[name || ''];
  const color = firstSeries.color,
        label = firstSeries.label,
        value_format = firstSeries.value_format;
  const value = data[0][name || ''];
  const formattedValue = (0, _numeral.default)(value).format(value_format);
  return _react.default.createElement(_visualizationsAdapters.VisWrapper, null, _react.default.createElement(SingleValueLayout, {
    width: width,
    height: height
  }, _react.default.createElement(SingleValueContent, {
    color: color
  }, formattedValue), label && _react.default.createElement(SingleValueTitle, {
    color: color
  }, label)));
};

exports.SingleValue = SingleValue;

const SingleValueLayout = _styledComponents.default.div.withConfig({
  displayName: "SingleValue__SingleValueLayout",
  componentId: "sc-1qwcp7y-0"
})(["align-items:center;background:", ";display:grid;grid-template-columns:1fr;height:", ";justify-items:center;width:", ";"], ({
  theme
}) => theme.colors.background, ({
  height
}) => `${height}px` || `auto`, ({
  width
}) => `${width}px` || `auto`);

const SingleValueContent = _styledComponents.default.div.withConfig({
  displayName: "SingleValue__SingleValueContent",
  componentId: "sc-1qwcp7y-1"
})(["color:", ";font-size:", ";"], ({
  color
}) => `${color}`, ({
  theme
}) => theme.fontSizes.xxxlarge);

const SingleValueTitle = _styledComponents.default.div.withConfig({
  displayName: "SingleValue__SingleValueTitle",
  componentId: "sc-1qwcp7y-2"
})(["color:", ";font-size:", ";opacity:50%;"], ({
  color
}) => `${color}`, ({
  theme
}) => theme.fontSizes.large);
//# sourceMappingURL=SingleValue.js.map