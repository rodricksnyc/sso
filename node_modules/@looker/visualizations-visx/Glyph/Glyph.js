import "core-js/modules/es.array.fill.js";
import React, { useContext } from 'react';
import { ThemeContext } from 'styled-components';
import { GlyphCircle, GlyphSquare, GlyphDiamond, GlyphTriangle } from '@visx/glyph';
var Glyphs = {
  circle: GlyphCircle,
  square: GlyphSquare,
  diamond: GlyphDiamond,
  triangle: GlyphTriangle,
  'triangle-down': GlyphTriangle
};
export var Glyph = function Glyph(_ref) {
  var series = _ref.series,
      top = _ref.top,
      left = _ref.left,
      size = _ref.size,
      fill = _ref.fill,
      styleObj = _ref.styleObj,
      stroke = _ref.stroke;
  var theme = useContext(ThemeContext);
  var _series$shape = series.shape,
      shape = _series$shape === void 0 ? 'circle' : _series$shape,
      _series$line_width = series.line_width,
      line_width = _series$line_width === void 0 ? 1 : _series$line_width;
  var CurrGlyph = Glyphs[shape];

  var strokeWidth = function strokeWidth() {
    switch (true) {
      case line_width < 3:
        return line_width;

      case line_width < 8:
        return line_width * 0.75;

      default:
        return line_width * 0.5;
    }
  };

  var renderedStroke = stroke || series.color || theme.colors.key;
  return React.createElement(CurrGlyph, {
    top: top,
    left: left,
    size: size,
    fill: fill || theme.colors.key,
    transform: shape === "triangle-down" ? "rotate(180)" : "",
    style: styleObj || {},
    stroke: stroke === false ? undefined : renderedStroke,
    strokeWidth: strokeWidth()
  });
};
//# sourceMappingURL=Glyph.js.map