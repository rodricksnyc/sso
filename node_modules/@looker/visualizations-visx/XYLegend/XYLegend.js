var _excluded = ["direction"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import "core-js/modules/es.string.small.js";
import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.array.fill.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";
import React, { useContext } from 'react';
import { ThemeContext } from 'styled-components';
import { DataContext } from '@visx/xychart';
import { LegendOrdinal } from '@visx/legend';
import partial from 'lodash/partial';
import { seriesLabelFormatter } from '../utils';
var DEFAULT_LEGEND_WIDTH = 200;
export var XYLegend = function XYLegend(_ref) {
  var chartWidth = _ref.chartWidth,
      config = _ref.config,
      fields = _ref.fields;

  var _useContext = useContext(DataContext),
      colorScale = _useContext.colorScale,
      visxTheme = _useContext.theme,
      margin = _useContext.margin;

  var _useContext2 = useContext(ThemeContext),
      _useContext2$space = _useContext2.space,
      xsmall = _useContext2$space.xsmall,
      small = _useContext2$space.small;

  var legend = config.legend;

  if (!legend) {
    return React.createElement(React.Fragment, null);
  }

  var legendWidth = legend.width || DEFAULT_LEGEND_WIDTH;
  var yAxisSpacer = legend.position === 'left' || legend.position === 'right' ? undefined : margin === null || margin === void 0 ? void 0 : margin.left;

  var _bottom$top$left$righ = {
    bottom: {
      direction: 'row',
      marginLeft: yAxisSpacer,
      marginTop: small,
      width: "calc(".concat(chartWidth ? "".concat(chartWidth, "px") : '100%', " - ").concat(yAxisSpacer, "px)")
    },
    top: {
      direction: 'row',
      marginLeft: yAxisSpacer,
      marginBottom: small,
      width: "calc(".concat(chartWidth ? "".concat(chartWidth, "px") : '100%', " - ").concat(yAxisSpacer, "px)")
    },
    left: {
      direction: 'column',
      width: legendWidth
    },
    right: {
      direction: 'column',
      width: legendWidth
    }
  }[legend.position],
      direction = _bottom$top$left$righ.direction,
      legendStyle = _objectWithoutProperties(_bottom$top$left$righ, _excluded);

  return React.createElement(LegendOrdinal, {
    direction: direction,
    itemMargin: "0 ".concat(small, " ").concat(xsmall, " ").concat(small),
    labelFormat: partial(seriesLabelFormatter, fields, config),
    style: _objectSpread({
      color: visxTheme === null || visxTheme === void 0 ? void 0 : visxTheme.svgLabelBig.fill,
      display: 'flex',
      flexShrink: 0,
      flexWrap: 'wrap',
      justifyContent: 'center'
    }, legendStyle),
    scale: colorScale,
    shape: "line"
  });
};
//# sourceMappingURL=XYLegend.js.map