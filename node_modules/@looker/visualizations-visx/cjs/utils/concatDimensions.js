"use strict";

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concatDimensions = void 0;

require("core-js/modules/es.array.map.js");

var _visualizationsAdapters = require("@looker/visualizations-adapters");

var _pick = _interopRequireDefault(require("lodash/pick"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const concatDimensions = (data, fields) => {
  const dimensionNames = (0, _visualizationsAdapters.getDimensionNames)(fields);
  const measureNames = (0, _visualizationsAdapters.getMeasureNames)(fields);
  const formattedData = data.map(datum => {
    const dimension = dimensionNames.map(name => datum[name]).join(' - ');
    return _objectSpread({
      dimension
    }, (0, _pick.default)(datum, measureNames));
  });
  return formattedData;
};

exports.concatDimensions = concatDimensions;
//# sourceMappingURL=concatDimensions.js.map