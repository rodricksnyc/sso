"use strict";

require("core-js/modules/es.array.index-of.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tick = exports.MAX_TICK_LABEL_LENGTH = void 0;

require("core-js/modules/es.string.trim.js");

require("core-js/modules/es.array.slice.js");

var _visualizationsAdapters = require("@looker/visualizations-adapters");

var _text = require("@visx/text");

var _numeral = _interopRequireDefault(require("numeral"));

var _react = _interopRequireDefault(require("react"));

var _utils = require("../utils");

const _excluded = ["formattedValue", "fields", "valueFormat"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const MAX_TICK_LABEL_LENGTH = 20;
exports.MAX_TICK_LABEL_LENGTH = MAX_TICK_LABEL_LENGTH;

const Tick = _ref => {
  let formattedValue = _ref.formattedValue,
      fields = _ref.fields,
      valueFormat = _ref.valueFormat,
      tickProps = _objectWithoutProperties(_ref, _excluded);

  const isNumericTick = (0, _visualizationsAdapters.isNumeric)(formattedValue);
  const label = (0, _utils.formatDateLabel)({
    dateString: formattedValue || '',
    fields
  });
  const renderedLabel = label.length > MAX_TICK_LABEL_LENGTH ? `${label.slice(0, MAX_TICK_LABEL_LENGTH).trim()}\u2026` : label;
  return _react.default.createElement(_text.Text, tickProps, valueFormat && isNumericTick ? (0, _numeral.default)(formattedValue).format(valueFormat) : renderedLabel);
};

exports.Tick = Tick;
//# sourceMappingURL=Tick.js.map