import "core-js/modules/es.array.map.js";
import defaultTo from 'lodash/defaultTo';
import keyBy from 'lodash/keyBy';
import { addQuotes } from '../string/add_quotes';
import { describeIsItem } from '../summary/describe_is_item';
import { describeIsAnyValue } from '../summary/describe_is_any_value';
import { joinOr } from '../summary/join_or';
import { describeUserAttribute } from '../user_attribute/describe_user_attribute';
import { escapeParameterValue } from './escape_parameter_value';

var describeMultiValue = function describeMultiValue(values, field) {
  if (values) {
    if (field !== null && field !== void 0 && field.parameter && field !== null && field !== void 0 && field.has_allowed_values) {
      var valueMap = keyBy(field.enumerations, 'value');
      return joinOr(values.map(function (value) {
        var _valueMap$escapedValu;

        var escapedValue = escapeParameterValue(value);
        return ((_valueMap$escapedValu = valueMap[escapedValue]) === null || _valueMap$escapedValu === void 0 ? void 0 : _valueMap$escapedValu.label) || value;
      }));
    }

    return joinOr(values.map(addQuotes));
  }

  return '';
};

var match = function match(_ref, _, field) {
  var is = _ref.is,
      value = _ref.value;
  return value && value.length ? describeIsItem(is, describeMultiValue(value, field)) : describeIsAnyValue();
};

var filterToStringMap = {
  match: match,
  user_attribute: describeUserAttribute,
  anyvalue: describeIsAnyValue
};
export var describeTier = function describeTier(item, filterType, field) {
  return defaultTo(filterToStringMap[item.type], function () {
    return '';
  })(item, filterType, field);
};
//# sourceMappingURL=describe_tier.js.map