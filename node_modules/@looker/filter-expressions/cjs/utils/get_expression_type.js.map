{"version":3,"file":"get_expression_type.js","names":["getTimeframeExpressionType","fieldType","isDateTime","some","timeString","indexOf","getExpressionTypeFromField","field","category","Category","parameter","type","enumerations","is_numeric","is_timeframe","getExpressionType","filter","filterExpressionMap","number_filter","string_filter","date_filter","field_filter"],"sources":["../../../src/utils/get_expression_type.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport { Category } from '@looker/sdk'\nimport type { IDashboardFilter, ILookmlModelExploreField } from '@looker/sdk'\nimport type { FilterExpressionType } from '../types/filter_type'\n\ninterface FilterExpressionTypeMap {\n  [type: string]: FilterExpressionType\n}\n\nconst getTimeframeExpressionType = (fieldType?: string) => {\n  if (!fieldType) return 'date'\n\n  const isDateTime = ['date_time', 'hour', 'minute', 'second'].some(\n    (timeString: string) => {\n      return fieldType.indexOf(timeString) > -1\n    }\n  )\n  if (isDateTime) return 'date_time'\n\n  return 'date'\n}\n\n/**\n * yields a value for the 'expressionType' prop on the Filter component\n */\nexport const getExpressionTypeFromField = (\n  field: ILookmlModelExploreField\n): FilterExpressionType => {\n  if (field?.category === Category.parameter && field?.type === 'number') {\n    // If parameter field has enumerations it always parsed as 'tier' but\n    // visually should be treated differently if number type defined in LookML\n    // bugs: b/187940941, b/199507872\n    return field.type as FilterExpressionType\n  }\n  if (field.enumerations) {\n    return 'tier'\n  }\n  if (field.is_numeric) {\n    return 'number'\n  }\n  if (field.is_timeframe) {\n    return getTimeframeExpressionType(field.type)\n  }\n  if (field.type === 'location' || field.type === 'location_bin_level') {\n    return 'location'\n  }\n  return 'string'\n}\n\n/**\n * Returns a valid filter expression type from a DashboardFilter object\n * depending if the filter is of type field or not\n */\nexport const getExpressionType = (\n  filter: Pick<IDashboardFilter, 'type' | 'field'>\n): FilterExpressionType => {\n  if (filter.field) {\n    return getExpressionTypeFromField(filter.field as ILookmlModelExploreField)\n  }\n\n  const filterExpressionMap: FilterExpressionTypeMap = {\n    number_filter: 'number',\n    string_filter: 'string',\n    date_filter: 'date',\n    // Catch for broken cases where field is not defined, display as a\n    // string filter\n    field_filter: 'string',\n  }\n  return filterExpressionMap[filter.type!]\n}\n"],"mappings":";;;;;;;;;AAyBA;;AAQA,MAAMA,0BAA0B,GAAIC,SAAD,IAAwB;EACzD,IAAI,CAACA,SAAL,EAAgB,OAAO,MAAP;EAEhB,MAAMC,UAAU,GAAG,CAAC,WAAD,EAAc,MAAd,EAAsB,QAAtB,EAAgC,QAAhC,EAA0CC,IAA1C,CAChBC,UAAD,IAAwB;IACtB,OAAOH,SAAS,CAACI,OAAV,CAAkBD,UAAlB,IAAgC,CAAC,CAAxC;EACD,CAHgB,CAAnB;EAKA,IAAIF,UAAJ,EAAgB,OAAO,WAAP;EAEhB,OAAO,MAAP;AACD,CAXD;;AAgBO,MAAMI,0BAA0B,GACrCC,KADwC,IAEf;EACzB,IAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,QAAP,MAAoBC,aAAA,CAASC,SAA7B,IAA0C,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEI,IAAP,MAAgB,QAA9D,EAAwE;IAItE,OAAOJ,KAAK,CAACI,IAAb;EACD;;EACD,IAAIJ,KAAK,CAACK,YAAV,EAAwB;IACtB,OAAO,MAAP;EACD;;EACD,IAAIL,KAAK,CAACM,UAAV,EAAsB;IACpB,OAAO,QAAP;EACD;;EACD,IAAIN,KAAK,CAACO,YAAV,EAAwB;IACtB,OAAOd,0BAA0B,CAACO,KAAK,CAACI,IAAP,CAAjC;EACD;;EACD,IAAIJ,KAAK,CAACI,IAAN,KAAe,UAAf,IAA6BJ,KAAK,CAACI,IAAN,KAAe,oBAAhD,EAAsE;IACpE,OAAO,UAAP;EACD;;EACD,OAAO,QAAP;AACD,CAtBM;;;;AA4BA,MAAMI,iBAAiB,GAC5BC,MAD+B,IAEN;EACzB,IAAIA,MAAM,CAACT,KAAX,EAAkB;IAChB,OAAOD,0BAA0B,CAACU,MAAM,CAACT,KAAR,CAAjC;EACD;;EAED,MAAMU,mBAA4C,GAAG;IACnDC,aAAa,EAAE,QADoC;IAEnDC,aAAa,EAAE,QAFoC;IAGnDC,WAAW,EAAE,MAHsC;IAMnDC,YAAY,EAAE;EANqC,CAArD;EAQA,OAAOJ,mBAAmB,CAACD,MAAM,CAACL,IAAR,CAA1B;AACD,CAhBM"}