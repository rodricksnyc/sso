"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.describeLocation = void 0;

var _i18next = _interopRequireDefault(require("i18next"));

var _defaultTo = _interopRequireDefault(require("lodash/defaultTo"));

var _describe_user_attribute = require("../user_attribute/describe_user_attribute");

var _get_distance_unit_labels = require("./get_distance_unit_labels");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const describeLat = lat => {
  const t = _i18next.default.t.bind(_i18next.default);

  const latAbs = Math.abs(lat).toFixed(1);
  const textNorth = t('lat degrees north', {
    ns: 'describe_location',
    lat: latAbs
  });
  const textSouth = t('lat degrees south', {
    ns: 'describe_location',
    lat: latAbs
  });
  return lat > 0 ? textNorth : textSouth;
};

const describeLon = lon => {
  const t = _i18next.default.t.bind(_i18next.default);

  const lonAbs = Math.abs(lon).toFixed(1);
  const textEast = t('lon degrees east', {
    ns: 'describe_location',
    lon: lonAbs
  });
  const textWest = t('lon degrees west', {
    ns: 'describe_location',
    lon: lonAbs
  });
  return lon > 0 ? textEast : textWest;
};

const box = ({
  lon,
  lat,
  lon1,
  lat1
}) => {
  const t = _i18next.default.t.bind(_i18next.default);

  return lon && lat && lon1 && lat1 ? t('coords1 to coords2', {
    coords1: `${describeLat(lat)}, ${describeLon(lon)}`,
    coords2: `${describeLat(lat1)}, ${describeLon(lon1)}`,
    ns: 'describe_location'
  }) : '';
};

const circle = ({
  distance,
  unit,
  lat,
  lon
}) => {
  const t = _i18next.default.t.bind(_i18next.default);

  return distance && unit && lat && lon ? t('distance unit from lat, lon', {
    ns: 'describe_location',
    distance,
    unit: (0, _get_distance_unit_labels.getDistanceUnitLabels)(unit),
    lat,
    lon
  }) : '';
};

const location = ({
  lat,
  lon
}) => lat && lon ? `${lat}, ${lon}` : '';

const anyvalue = () => {
  const t = _i18next.default.t.bind(_i18next.default);

  return t('is anywhere', {
    ns: 'describe_location'
  });
};

const describeNull = () => {
  const t = _i18next.default.t.bind(_i18next.default);

  return t('is null', {
    ns: 'describe_location'
  });
};

const describeNotNull = () => {
  const t = _i18next.default.t.bind(_i18next.default);

  return t('is not null', {
    ns: 'describe_location'
  });
};

const filterToStringMap = {
  box,
  circle,
  location,
  anyvalue,
  null: describeNull,
  notnull: describeNotNull,
  user_attribute: _describe_user_attribute.describeUserAttribute
};

const describeLocation = item => (0, _defaultTo.default)(filterToStringMap[item.type], () => '')(item);

exports.describeLocation = describeLocation;
//# sourceMappingURL=describe_location.js.map