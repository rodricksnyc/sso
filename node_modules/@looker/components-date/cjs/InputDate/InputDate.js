"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InputDate = void 0;

var _reactI18next = require("react-i18next");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _isEqual = _interopRequireDefault(require("lodash/isEqual"));

var _components = require("@looker/components");

var _Calendar = require("../Calendar");

var _locale = require("../locale");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const isDateInView = (value, viewMonth) => {
  if (value.getFullYear() === viewMonth.getFullYear() && value.getMonth() === viewMonth.getMonth()) {
    return true;
  }

  return false;
};

const InputDate = (0, _react.forwardRef)(({
  'aria-describedby': ariaDescribedby,
  'aria-labelledby': ariaLabelledby,
  selectMonth = false,
  dateStringFormat,
  defaultValue,
  disabled,
  firstDayOfWeek,
  id,
  locale,
  onChange,
  onValidationFail,
  readOnly,
  validationType,
  value
}, ref) => {
  const _useTranslation = (0, _reactI18next.useTranslation)('InputDate'),
        t = _useTranslation.t;

  (0, _components.useReadOnlyWarn)('InputDate', value, onChange);

  const _useState = (0, _react.useState)(value || defaultValue),
        _useState2 = _slicedToArray(_useState, 2),
        selectedDate = _useState2[0],
        setSelectedDate = _useState2[1];

  const _useState3 = (0, _react.useState)(validationType !== 'error'),
        _useState4 = _slicedToArray(_useState3, 2),
        validDate = _useState4[0],
        setValidDate = _useState4[1];

  const _useState5 = (0, _react.useState)(selectedDate ? (0, _locale.formatDateString)(selectedDate, locale, dateStringFormat) : ''),
        _useState6 = _slicedToArray(_useState5, 2),
        textInputValue = _useState6[0],
        setTextInputValue = _useState6[1];

  const _useState7 = (0, _react.useState)(value || defaultValue || new Date(Date.now())),
        _useState8 = _slicedToArray(_useState7, 2),
        viewMonth = _useState8[0],
        setViewMonth = _useState8[1];

  const handleDateChange = date => {
    if (!validationType) {
      setValidDate(true);
    }

    setSelectedDate(date);
    setViewMonth(date);

    if ((0, _isFunction.default)(onChange)) {
      onChange(date);
    }
  };

  const handleDayClick = date => {
    setTextInputValue((0, _locale.formatDateString)(date, locale, dateStringFormat));
    handleDateChange(date);
  };

  const handleTextInputChange = e => {
    const value = e.target.value;
    setTextInputValue(value);

    if (value.length === 0) {
      handleDateChange();
    } else {
      const parsedValue = (0, _locale.parseDateFromString)(value, locale, dateStringFormat);

      if (parsedValue) {
        handleDateChange(parsedValue);
      }
    }
  };

  const handleValidation = e => {
    if (!validationType) {
      const value = e.target.value;
      const isValid = value.length === 0 || !!(0, _locale.parseDateFromString)(value, locale, dateStringFormat);
      setValidDate(isValid);

      if (!isValid && (0, _isFunction.default)(onValidationFail)) {
        onValidationFail(value);
      }
    }
  };

  const handleNavClick = month => {
    setViewMonth(month);
  };

  const renderedValidationType = !validDate ? 'error' : undefined;
  (0, _react.useEffect)(() => {
    if (value && !(0, _isEqual.default)(value, selectedDate)) {
      setSelectedDate(value);
      value && setTextInputValue((0, _locale.formatDateString)(value, locale, dateStringFormat));
      value && viewMonth && !isDateInView(value, viewMonth) && setViewMonth(value);
    }
  }, [textInputValue, value, onChange]);
  return _react.default.createElement(InputDateWrapper, null, _react.default.createElement(_components.InputText, {
    "aria-describedby": ariaDescribedby,
    "aria-labelledby": ariaLabelledby,
    placeholder: `${t('Date')} (${(0, _locale.formatDateString)(new Date(Date.now()), locale, dateStringFormat)})`,
    value: textInputValue,
    onChange: handleTextInputChange,
    validationType: renderedValidationType,
    onBlur: handleValidation,
    "data-testid": "text-input",
    id: id,
    ref: ref,
    disabled: disabled,
    readOnly: readOnly
  }), _react.default.createElement(CalendarWrapper, null, _react.default.createElement(_components.VisuallyHidden, {
    "aria-live": "assertive",
    "data-testid": "hidden-value"
  }, viewMonth ? (0, _Calendar.formatMonthTitle)(locale)(viewMonth) : ''), _react.default.createElement(_Calendar.Calendar, {
    selectMonth: selectMonth,
    selectedDates: selectedDate,
    onDayClick: handleDayClick,
    locale: locale,
    firstDayOfWeek: firstDayOfWeek,
    viewMonth: viewMonth,
    onMonthChange: setViewMonth,
    onNowClick: handleNavClick,
    onNextClick: handleNavClick,
    onPrevClick: handleNavClick,
    disabled: disabled,
    readOnly: readOnly
  })));
});
exports.InputDate = InputDate;
InputDate.displayName = 'InputDate';

const InputDateWrapper = _styledComponents.default.div.withConfig({
  displayName: "InputDate__InputDateWrapper",
  componentId: "sc-1owupy6-0"
})(["width:100%;"]);

const CalendarWrapper = _styledComponents.default.div.withConfig({
  displayName: "InputDate__CalendarWrapper",
  componentId: "sc-1owupy6-1"
})(["", "{padding:0;}"], _Calendar.Calendar);
//# sourceMappingURL=InputDate.js.map