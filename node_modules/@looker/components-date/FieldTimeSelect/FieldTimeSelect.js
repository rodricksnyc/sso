import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { FloatingLabelField, getHasValue, omitFieldProps, pickFieldProps, useFormContext, useID } from '@looker/components';
import { InputTimeSelect } from '../InputTimeSelect';
var FieldTimeSelectComponent = forwardRef(function (props, ref) {
  var validationMessage = useFormContext(props);
  var id = useID(props.id);
  return React.createElement(FloatingLabelField, _extends({
    "data-testid": "FieldSelectMultiId"
  }, pickFieldProps(props), {
    id: id,
    validationMessage: validationMessage,
    hasValue: getHasValue(props)
  }), React.createElement(InputTimeSelect, _extends({}, omitFieldProps(props), {
    "aria-labelledby": "labelledby-".concat(id),
    id: id,
    validationType: validationMessage && validationMessage.type,
    ref: ref
  })));
});
FieldTimeSelectComponent.displayName = 'FieldTimeSelectComponent';
export var FieldTimeSelect = styled(FieldTimeSelectComponent).withConfig({
  displayName: "FieldTimeSelect",
  componentId: "sc-pw5je8-0"
})([""]);
//# sourceMappingURL=FieldTimeSelect.js.map