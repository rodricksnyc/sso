{"version":3,"sources":["../../src/locale/getLocale.ts"],"names":["arSA","cs","da","de","enUS","es","fi","frCA","fr","he","hi","it","ja","ko","lt","nb","nl","pl","ptBR","pt","ru","sv","th","tr","uk","zhCN","zhTW","dateFnLocaleMap","en","isLocaleCode","str","getLocale","locale"],"mappings":"AA0BA,OAAOA,IAAP,MAAiB,uBAAjB;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,OAAO,IAAMC,eAAe,GAAG;AAC7B,WAAS3B,IADoB;AAE7B,WAASC,EAFoB;AAG7B,WAASC,EAHoB;AAI7B,WAASC,EAJoB;AAK7ByB,EAAAA,EAAE,EAAExB,IALyB;AAM7B,WAASC,EANoB;AAO7B,WAASC,EAPoB;AAQ7B,WAASC,IARoB;AAS7B,WAASC,EAToB;AAU7B,WAASC,EAVoB;AAW7B,WAASC,EAXoB;AAY7B,WAASC,EAZoB;AAa7B,WAASC,EAboB;AAc7B,WAASC,EAdoB;AAe7B,WAASC,EAfoB;AAgB7B,WAASC,EAhBoB;AAiB7B,WAASC,EAjBoB;AAkB7B,WAASC,EAlBoB;AAmB7B,WAASC,IAnBoB;AAoB7B,WAASC,EApBoB;AAqB7B,WAASC,EArBoB;AAsB7B,WAASC,EAtBoB;AAuB7B,WAASC,EAvBoB;AAwB7B,WAASC,EAxBoB;AAyB7B,WAASC,EAzBoB;AA0B7B,WAASC,IA1BoB;AA2B7B,WAASC;AA3BoB,CAAxB;;AAgCP,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAqC;AACxD,SAAOA,GAAG,IAAIH,eAAd;AACD,CAFD;;AAQA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAAoB;AAC3C,SAAOH,YAAY,CAACG,MAAD,CAAZ,GAAuBL,eAAe,CAACK,MAAD,CAAtC,GAAiD5B,IAAxD;AACD,CAFM","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport arSA from 'date-fns/locale/ar-SA'\nimport cs from 'date-fns/locale/cs'\nimport da from 'date-fns/locale/da'\nimport de from 'date-fns/locale/de'\nimport enUS from 'date-fns/locale/en-US'\nimport es from 'date-fns/locale/es'\nimport fi from 'date-fns/locale/fi'\nimport frCA from 'date-fns/locale/fr-CA'\nimport fr from 'date-fns/locale/fr'\nimport he from 'date-fns/locale/he'\nimport hi from 'date-fns/locale/hi'\nimport it from 'date-fns/locale/it'\nimport ja from 'date-fns/locale/ja'\nimport ko from 'date-fns/locale/ko'\nimport lt from 'date-fns/locale/lt'\nimport nb from 'date-fns/locale/nb'\nimport nl from 'date-fns/locale/nl'\nimport pl from 'date-fns/locale/pl'\nimport ptBR from 'date-fns/locale/pt-BR'\nimport pt from 'date-fns/locale/pt'\nimport ru from 'date-fns/locale/ru'\nimport sv from 'date-fns/locale/sv'\nimport th from 'date-fns/locale/th'\nimport tr from 'date-fns/locale/tr'\nimport uk from 'date-fns/locale/uk'\nimport zhCN from 'date-fns/locale/zh-CN'\nimport zhTW from 'date-fns/locale/zh-TW'\n\nexport const dateFnLocaleMap = {\n  'ar-SA': arSA,\n  'cs-CZ': cs,\n  'da-DK': da,\n  'de-DE': de,\n  en: enUS,\n  'es-ES': es,\n  'fi-FI': fi,\n  'fr-CA': frCA,\n  'fr-FR': fr,\n  'he-IL': he,\n  'hi-IN': hi,\n  'it-IT': it,\n  'ja-JP': ja,\n  'ko-KR': ko,\n  'lt-LT': lt,\n  'nb-NO': nb,\n  'nl-NL': nl,\n  'pl-PL': pl,\n  'pt-BR': ptBR,\n  'pt-PT': pt,\n  'ru-RU': ru,\n  'sv-SE': sv,\n  'th-TH': th,\n  'tr-TR': tr,\n  'uk-UA': uk,\n  'zh-CN': zhCN,\n  'zh-TW': zhTW,\n} as const\n\nexport type LocaleCodes = keyof typeof dateFnLocaleMap\n\nconst isLocaleCode = (str: string): str is LocaleCodes => {\n  return str in dateFnLocaleMap\n}\n\n/**\n * Get date-fns locale from locale string\n * If possible, import locale directly from date-fns to save bundle size\n */\nexport const getLocale = (locale: string) => {\n  return isLocaleCode(locale) ? dateFnLocaleMap[locale] : enUS\n}\n"],"file":"getLocale.js"}