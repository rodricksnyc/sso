import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.object.assign.js";
var _excluded = ["localeUtils"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.object.define-property.js";

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import en from 'date-fns/locale/en-US';
import React from 'react';
import DayPicker, { LocaleUtils } from 'react-day-picker';
import styled, { css } from 'styled-components';
import has from 'lodash/has';
import noop from 'lodash/noop';
import { reset, calendarMixColor } from '@looker/design-tokens';
import { formatDateString } from '../locale';
import { calendarSize, calendarSpacing } from './calendar-size';
import { CalendarContext } from './CalendarContext';
import { CalendarNav } from './CalendarNav';
import { dayPickerCss } from './dayPickerCss';
import { formatMonthTitle } from './formatMonthTitle';
import { YearMonthForm, fromMonth, toMonth } from './YearMonthForm';

var getLocaleProps = function getLocaleProps(_ref) {
  var firstDayOfWeek = _ref.firstDayOfWeek,
      _ref$locale = _ref.locale,
      locale = _ref$locale === void 0 ? en : _ref$locale;

  var localeUtils = _objectSpread(_objectSpread({}, LocaleUtils), {}, {
    formatDay: function formatDay(date) {
      return formatDateString(date, locale, 'iii PP');
    },
    formatMonthTitle: formatMonthTitle(locale),
    formatWeekdayLong: function formatWeekdayLong(date) {
      var _locale$localize;

      return (_locale$localize = locale.localize) === null || _locale$localize === void 0 ? void 0 : _locale$localize.day(date);
    },
    formatWeekdayShort: function formatWeekdayShort(date) {
      var _locale$localize2;

      return (_locale$localize2 = locale.localize) === null || _locale$localize2 === void 0 ? void 0 : _locale$localize2.day(date, {
        width: 'short'
      });
    }
  });

  return {
    firstDayOfWeek: firstDayOfWeek,
    locale: locale.code,
    localeUtils: localeUtils
  };
};

var NoopComponent = function NoopComponent() {
  return null;
};

var InternalCalendar = function InternalCalendar(_ref2) {
  var _locale$options;

  var className = _ref2.className,
      selectMonth = _ref2.selectMonth,
      disabled = _ref2.disabled,
      propsFirstDayOfWeek = _ref2.firstDayOfWeek,
      locale = _ref2.locale,
      onDayClick = _ref2.onDayClick,
      onMonthChange = _ref2.onMonthChange,
      onNextClick = _ref2.onNextClick,
      onNowClick = _ref2.onNowClick,
      onPrevClick = _ref2.onPrevClick,
      readOnly = _ref2.readOnly,
      selectedDates = _ref2.selectedDates,
      _ref2$showNextButton = _ref2.showNextButton,
      showNextButton = _ref2$showNextButton === void 0 ? true : _ref2$showNextButton,
      _ref2$showPreviousBut = _ref2.showPreviousButton,
      showPreviousButton = _ref2$showPreviousBut === void 0 ? true : _ref2$showPreviousBut,
      viewMonth = _ref2.viewMonth;
  var firstDayOfWeek = propsFirstDayOfWeek !== null && propsFirstDayOfWeek !== void 0 ? propsFirstDayOfWeek : locale === null || locale === void 0 ? void 0 : (_locale$options = locale.options) === null || _locale$options === void 0 ? void 0 : _locale$options.weekStartsOn;
  var renderDateRange = selectedDates && has(selectedDates, 'from');
  var modifiers = renderDateRange ? selectedDates : {};

  var disableCallback = function disableCallback() {
    var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;
    return function (date) {
      return disabled ? noop() : cb(date);
    };
  };

  var _getLocaleProps = getLocaleProps({
    firstDayOfWeek: firstDayOfWeek,
    locale: locale
  }),
      localeUtils = _getLocaleProps.localeUtils,
      localeProps = _objectWithoutProperties(_getLocaleProps, _excluded);

  var form = React.createElement(YearMonthForm, {
    selectMonth: selectMonth,
    date: viewMonth,
    disabled: disabled,
    localeUtils: localeUtils,
    onChange: onMonthChange,
    onNowClick: onNowClick,
    size: "medium"
  });
  var nav = React.createElement(CalendarNav, null, form);
  return React.createElement(CalendarContext.Provider, {
    value: {
      onNextClick: disableCallback(onNextClick),
      onNowClick: disableCallback(onNowClick),
      onPrevClick: disableCallback(onPrevClick),
      showNextButton: (!disabled || !readOnly) && showNextButton,
      showPreviousButton: (!disabled || !readOnly) && showPreviousButton,
      size: 'medium'
    }
  }, React.createElement(DayPicker, _extends({
    localeUtils: localeUtils
  }, localeProps, {
    className: "".concat(renderDateRange && 'render-date-range', " ").concat(className),
    month: viewMonth,
    fromMonth: fromMonth,
    toMonth: toMonth,
    onDayClick: disableCallback(onDayClick),
    navbarElement: !disabled ? nav : form,
    captionElement: NoopComponent,
    selectedDays: selectedDates,
    showOutsideDays: true,
    modifiers: modifiers,
    onMonthChange: onMonthChange
  })));
};

export var Calendar = styled(InternalCalendar).attrs(function () {
  return {
    size: 'medium'
  };
}).withConfig({
  displayName: "Calendar",
  componentId: "sc-1d4vmg5-0"
})(["", " ", " ", " .DayPicker-NavBar{display:none;}.DayPicker-wrapper{border:2px solid transparent;&:focus{outline:none;", "}}.DayPicker-Month{margin:0;padding:0;}.DayPicker-Body{display:grid;grid-gap:1px;}.DayPicker-Weekdays{display:block;margin-top:0;}.DayPicker-Week,.DayPicker-WeekdaysRow{display:grid;grid-template-columns:repeat(7,auto);}.DayPicker-Day{", " align-items:center;border:1px solid transparent;color:", ";cursor:", ";display:grid;justify-items:center;line-height:1;padding:0;transition:background-color 110ms linear;&.DayPicker-Day--outside{color:", ";}&--today{color:", ";}&--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside){background-color:", ";position:static;&:hover{background-color:", ";}}&:focus{border-color:", ";border-width:2px;outline:none;}}&.render-date-range{.DayPicker-Day--selected{border-radius:0;&:not(.DayPicker-Day--from):first-child{border-bottom-left-radius:", ";border-top-left-radius:", ";}&:not(.DayPicker-Day--to):last-child{border-bottom-right-radius:", ";border-top-right-radius:", ";}&.DayPicker-Day--outside,&:not(.DayPicker-Day--to):not(.DayPicker-Day--from){background-color:", ";", "}&:not(.DayPicker-Day--to):not(.DayPicker-Day--from):not(.DayPicker-Day--outside){color:", ";}}.DayPicker-Day--from{border-bottom-left-radius:50%;border-top-left-radius:50%;}.DayPicker-Day--to{border-bottom-right-radius:50%;border-top-right-radius:50%;}}&:not(.DayPicker--interactionDisabled){.DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover{&:hover{background-color:", ";color:", ";}}}"], reset, dayPickerCss, calendarSpacing, function (_ref3) {
  var disabled = _ref3.disabled;
  return !disabled && css(["border-color:", ";"], function (_ref4) {
    var theme = _ref4.theme;
    return theme.colors.key;
  });
}, calendarSize, function (_ref5) {
  var colors = _ref5.theme.colors,
      disabled = _ref5.disabled;
  return disabled ? colors.text2 : colors.text4;
}, function (_ref6) {
  var disabled = _ref6.disabled;
  return disabled ? 'default' : 'pointer';
}, function (_ref7) {
  var colors = _ref7.theme.colors;
  return colors.text1;
}, function (_ref8) {
  var colors = _ref8.theme.colors,
      disabled = _ref8.disabled;
  return !disabled && colors.key;
}, function (_ref9) {
  var colors = _ref9.theme.colors,
      disabled = _ref9.disabled;
  return disabled ? colors.neutral : colors.key;
}, function (_ref10) {
  var colors = _ref10.theme.colors,
      disabled = _ref10.disabled,
      readOnly = _ref10.readOnly;
  return disabled || readOnly ? colors.neutralInteractive : colors.keyInteractive;
}, function (_ref11) {
  var colors = _ref11.theme.colors,
      disabled = _ref11.disabled,
      readOnly = _ref11.readOnly;
  return disabled || readOnly ? 'transparent' : colors.keyBorder;
}, function (_ref12) {
  var radii = _ref12.theme.radii;
  return radii.medium;
}, function (_ref13) {
  var radii = _ref13.theme.radii;
  return radii.medium;
}, function (_ref14) {
  var radii = _ref14.theme.radii;
  return radii.medium;
}, function (_ref15) {
  var radii = _ref15.theme.radii;
  return radii.medium;
}, function (_ref16) {
  var colors = _ref16.theme.colors,
      disabled = _ref16.disabled;
  return disabled ? colors.neutralAccent : colors.keyAccent;
}, calendarMixColor, function (_ref17) {
  var colors = _ref17.theme.colors;
  return colors.neutralInteractive;
}, function (_ref18) {
  var colors = _ref18.theme.colors,
      disabled = _ref18.disabled;
  return disabled ? 'transparent' : colors.keyAccent;
}, function (_ref19) {
  var colors = _ref19.theme.colors,
      disabled = _ref19.disabled;
  return !disabled && colors.key;
});
//# sourceMappingURL=Calendar.js.map