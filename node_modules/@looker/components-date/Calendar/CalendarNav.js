import React, { useContext } from 'react';
import styled from 'styled-components';
import noop from 'lodash/noop';
import { ChevronLeft } from '@styled-icons/material-rounded/ChevronLeft';
import { ChevronRight } from '@styled-icons/material-rounded/ChevronRight';
import { IconButton } from '@looker/components';
import { CalendarContext } from './CalendarContext';
export var headingSizeMap = function headingSizeMap(size) {
  switch (size) {
    case 'small':
      return 'h6';

    case 'medium':
      return 'h5';

    case 'large':
      return 'h4';

    default:
      return 'h5';
  }
};
export var CalendarNav = function CalendarNav(_ref) {
  var children = _ref.children,
      labels = _ref.labels,
      nextMonth = _ref.nextMonth,
      previousMonth = _ref.previousMonth;

  var _useContext = useContext(CalendarContext),
      _useContext$onNextCli = _useContext.onNextClick,
      onNextClick = _useContext$onNextCli === void 0 ? noop : _useContext$onNextCli,
      _useContext$onPrevCli = _useContext.onPrevClick,
      onPrevClick = _useContext$onPrevCli === void 0 ? noop : _useContext$onPrevCli,
      showPreviousButton = _useContext.showPreviousButton,
      showNextButton = _useContext.showNextButton,
      size = _useContext.size;

  var handleNextClick = function handleNextClick(e) {
    e.preventDefault();
    onNextClick(nextMonth);
  };

  var handlePreviousClick = function handlePreviousClick(e) {
    e.preventDefault();
    onPrevClick(previousMonth);
  };

  return React.createElement(NavGrid, null, React.createElement(NextButtonWrapper, null, showPreviousButton && React.createElement(IconButton, {
    icon: React.createElement(ChevronLeft, null),
    label: labels === null || labels === void 0 ? void 0 : labels.previousMonth,
    size: size,
    onClick: handlePreviousClick
  })), children, React.createElement(PrevButtonWrapper, null, showNextButton && React.createElement(IconButton, {
    icon: React.createElement(ChevronRight, null),
    label: labels === null || labels === void 0 ? void 0 : labels.nextMonth,
    size: size,
    onClick: handleNextClick,
    style: {
      justifySelf: 'right'
    }
  })));
};
var NavGrid = styled.div.withConfig({
  displayName: "CalendarNav__NavGrid",
  componentId: "sc-3k2ono-0"
})(["align-items:center;display:grid;grid-template-columns:40px 1fr 40px;justify-items:center;"]);
var NextButtonWrapper = styled.div.withConfig({
  displayName: "CalendarNav__NextButtonWrapper",
  componentId: "sc-3k2ono-1"
})(["justify-self:left;"]);
var PrevButtonWrapper = styled.div.withConfig({
  displayName: "CalendarNav__PrevButtonWrapper",
  componentId: "sc-3k2ono-2"
})(["justify-self:right;"]);
//# sourceMappingURL=CalendarNav.js.map