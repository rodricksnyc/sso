{"version":3,"file":"MessageBar.js","names":["NoopComponent","getPrimaryActionButton","t","primaryAction","onClick","intent","id","undefined","getIntentLabel","ns","getSecondaryActionButton","secondaryAction","MessageBarLayout","forwardRef","ref","children","visibleProp","visible","onPrimaryClick","noop","onSecondaryClick","noActions","props","useReadOnlyWarn","useState","isUndefined","setVisible","handlePrimaryClick","handleSecondaryClick","useEffect","useTranslation","PrimaryButton","SecondaryButton","messageBarMarkup","omitStyledProps","displayName","MessageBarContent","styled","div","theme","space","u5","backgroundColor","variant","prop","variants","critical","inform","positive","warn","MessageBar","attrs","px","py","width","simpleLayoutCSS","radii","medium","colors","text5","fontSizes","small"],"sources":["../../../src/MessageBar/MessageBar.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { TFunction } from 'i18next'\nimport type {\n  CompatibleHTMLProps,\n  TypographyProps,\n} from '@looker/design-tokens'\nimport { omitStyledProps, variant } from '@looker/design-tokens'\nimport { Close } from '@styled-icons/material/Close'\nimport noop from 'lodash/noop'\nimport isUndefined from 'lodash/isUndefined'\nimport type { Ref, ReactElement } from 'react'\nimport React, { forwardRef, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport type { ButtonProps } from '../Button'\nimport { IconButton, ButtonTransparent } from '../Button'\nimport { Space } from '../Layout/Space'\nimport type { SimpleLayoutProps } from '../Layout/utils/simple'\nimport { simpleLayoutCSS } from '../Layout/utils/simple'\nimport { useReadOnlyWarn, useTranslation } from '../utils'\nimport { getIntentLabel, Status } from '../Status'\n\nexport type MessageBarIntent = 'critical' | 'inform' | 'positive' | 'warn'\n\nexport type SupportedActionTypes = string | ReactElement<ButtonProps>\n\nexport interface MessageBarProps\n  extends CompatibleHTMLProps<HTMLElement>,\n    SimpleLayoutProps,\n    TypographyProps {\n  /**\n   * Determines the icon choice and background color\n   * @default: 'inform'\n   */\n  intent?: MessageBarIntent\n  /**\n   * Determines whether the MessageBar is rendered or not.\n   * @default: true\n   */\n  visible?: boolean\n  /**\n   * Polymorphic prop defines the primary action button to render.\n   * @default true (which renders IconButton)\n   */\n  primaryAction?: SupportedActionTypes\n  /**\n   * Polymorphic prop defines the secondary action button to render.\n   */\n  secondaryAction?: SupportedActionTypes\n  /**\n   * Callback fires when primaryAction is clicked\n   * @default noop\n   */\n  onPrimaryClick?: () => void\n  /**\n   * Callback fires when secondaryAction is clicked\n   * @default noop\n   */\n  onSecondaryClick?: () => void\n  /**\n   * Hide action buttons altogether\n   * @default false\n   */\n  noActions?: boolean\n  className?: string\n}\n\ninterface DefaultDismissButtonProps {\n  id?: string\n  intent?: MessageBarIntent\n  onClick: () => void\n}\n\nconst NoopComponent = () => <></>\n\n/* eslint-disable react/display-name */\n\n/*\n * Helper function checks the type of `primaryAction`\n * type: string\n *   -- returns a ButtonTransparent with `primaryAction` as the label\n * type: object\n *   -- signifies a custom react element, and is directly rendered\n * type: boolean\n *  -- true returns the default `X` dismiss button\n *  -- false returns NoopComponent\n */\nfunction getPrimaryActionButton(\n  t: TFunction,\n  primaryAction?: SupportedActionTypes\n): (props: DefaultDismissButtonProps) => ReactElement {\n  switch (typeof primaryAction) {\n    case 'string':\n      // string label\n      return ({ onClick }: DefaultDismissButtonProps) => (\n        <ButtonTransparent onClick={onClick}>{primaryAction}</ButtonTransparent>\n      )\n    case 'object':\n      // custom react component\n      return () => primaryAction\n    default:\n      return ({ intent, onClick, id }: DefaultDismissButtonProps) => (\n        <IconButton\n          id={id ? `${id}-iconButton` : undefined}\n          onClick={onClick}\n          icon={<Close />}\n          size=\"small\"\n          label={`${t('DismissIntent', {\n            intent: getIntentLabel(t, intent),\n            ns: 'MessageBar',\n          })}`}\n        />\n      )\n  }\n}\n\n/*\n * Helper function checks the type of `secondaryAction`\n * type: string\n *   -- returns a ButtonTransparent with `secondaryAction` as the label\n * type: object\n *   -- signifies a custom react element, and is directly rendered\n * type: boolean or undefined\n *  -- returns NoopComponent\n */\nfunction getSecondaryActionButton(\n  secondaryAction?: SupportedActionTypes\n): (props: DefaultDismissButtonProps) => ReactElement {\n  switch (typeof secondaryAction) {\n    case 'string':\n      // string label\n      return ({ onClick }: DefaultDismissButtonProps) => (\n        <ButtonTransparent onClick={onClick} color=\"neutral\">\n          {secondaryAction}\n        </ButtonTransparent>\n      )\n    case 'object':\n      // custom react component\n      return () => secondaryAction\n    default:\n      return NoopComponent\n  }\n}\n\n/* eslint-enable react/display-name */\n\nconst MessageBarLayout = forwardRef(\n  (\n    {\n      id,\n      children,\n      intent = 'inform',\n      visible: visibleProp,\n      onPrimaryClick = noop,\n      onSecondaryClick = noop,\n      primaryAction,\n      secondaryAction,\n      noActions = false,\n      ...props\n    }: MessageBarProps,\n    ref: Ref<HTMLDivElement>\n  ) => {\n    useReadOnlyWarn('MessageBar', visibleProp, onPrimaryClick)\n\n    const [visible, setVisible] = useState(\n      isUndefined(visibleProp) ? true : visibleProp\n    )\n\n    const handlePrimaryClick = () => {\n      setVisible(visibleProp || false)\n      onPrimaryClick()\n    }\n\n    const handleSecondaryClick = () => {\n      setVisible(visibleProp || false)\n      onSecondaryClick()\n    }\n\n    useEffect(() => {\n      if (!isUndefined(visibleProp)) {\n        setVisible(visibleProp)\n      }\n    }, [visibleProp])\n\n    const { t } = useTranslation('MessageBar')\n    const PrimaryButton = getPrimaryActionButton(t, primaryAction)\n    const SecondaryButton = getSecondaryActionButton(secondaryAction)\n\n    const messageBarMarkup = (\n      <div\n        aria-live=\"polite\"\n        ref={ref}\n        role=\"status\"\n        {...omitStyledProps(props)}\n      >\n        <Status intent={intent} />\n        <MessageBarContent>{children}</MessageBarContent>\n        {!noActions && (\n          <Space width=\"auto\">\n            <SecondaryButton onClick={handleSecondaryClick} />\n            <PrimaryButton\n              intent={intent}\n              onClick={handlePrimaryClick}\n              id={id}\n            />\n          </Space>\n        )}\n      </div>\n    )\n\n    return visible ? messageBarMarkup : null\n  }\n)\n\nMessageBarLayout.displayName = 'MessageBarLayout'\n\nconst MessageBarContent = styled.div`\n  flex-grow: 1;\n  padding: 0 ${({ theme: { space } }) => space.u5};\n`\n\nconst backgroundColor = variant({\n  prop: 'intent',\n  variants: {\n    critical: {\n      backgroundColor: 'criticalAccent',\n    },\n    inform: {\n      backgroundColor: 'informAccent',\n    },\n    positive: {\n      backgroundColor: 'positiveAccent',\n    },\n    warn: {\n      backgroundColor: 'warnAccent',\n    },\n  },\n})\n\nexport const MessageBar = styled(MessageBarLayout).attrs(\n  ({ intent = 'inform', px = 'medium', py = 'small', width = '100%' }) => ({\n    intent,\n    px,\n    py,\n    width,\n  })\n)`\n  ${simpleLayoutCSS}\n  align-items: center;\n  ${backgroundColor}\n  border-radius: ${({ theme: { radii } }) => radii.medium};\n  color: ${({ theme: { colors } }) => colors.text5};\n  display: flex;\n  font-size: ${({ theme: { fontSizes } }) => fontSizes.small};\n`\n"],"mappings":"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"}