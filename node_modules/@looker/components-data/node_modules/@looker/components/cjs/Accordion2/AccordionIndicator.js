"use strict";

require("core-js/modules/es.array.index-of.js");

require("core-js/modules/es.array.filter.js");

require("core-js/modules/es.object.get-own-property-descriptors.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccordionIndicator = void 0;

var _pick = _interopRequireDefault(require("lodash/pick"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledIcon = require("@styled-icons/styled-icon");

var _Ripple = require("../Ripple");

var _accordionDimensions = require("./accordionDimensions");

const _excluded = ["children", "density", "indicatorPosition"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

const size = (density = 0) => (0, _accordionDimensions.accordionDimensions)(density).indicatorSize;

const gap = (density = 0) => (0, _accordionDimensions.accordionDimensions)(density).indicatorGap;

const AccordionIndicator = (0, _styledComponents.default)(_ref => {
  let children = _ref.children,
      density = _ref.density,
      indicatorPosition = _ref.indicatorPosition,
      props = _objectWithoutProperties(_ref, _excluded);

  const _useRipple = (0, _Ripple.useRipple)({
    color: 'neutral'
  }),
        callbacks = _useRipple.callbacks,
        rippleClassName = _useRipple.className,
        rippleStyle = _useRipple.style;

  const rippleHandlers = (0, _Ripple.useRippleHandlers)(callbacks, _objectSpread({}, (0, _pick.default)(_objectSpread({}, props), _Ripple.rippleHandlerKeys)));
  const rippleContainerProps = {
    className: rippleClassName,
    style: rippleStyle
  };
  const isIndicatorToggleOnly = props.tabIndex === -1;
  return _react.default.createElement("div", _extends({}, props, isIndicatorToggleOnly && rippleHandlers), _react.default.createElement(RippleContainer, _extends({
    density: density || 0
  }, rippleContainerProps), children));
}).withConfig({
  displayName: "AccordionIndicator",
  componentId: "sc-1w66fqe-0"
})(["align-items:center;display:flex;justify-content:center;outline:none;", " ", "{height:", ";vertical-align:baseline;width:", ";}"], ({
  density,
  indicatorPosition,
  theme: {
    space
  }
}) => indicatorPosition === 'left' ? `margin-right: ${space[gap(density)]};` : `margin-left: ${space[gap(density)]};`, _styledIcon.StyledIconBase, ({
  density,
  theme
}) => theme.sizes[size(density)], ({
  density,
  theme
}) => theme.sizes[size(density)]);
exports.AccordionIndicator = AccordionIndicator;

const RippleContainer = _styledComponents.default.div.withConfig({
  displayName: "AccordionIndicator__RippleContainer",
  componentId: "sc-1w66fqe-1"
})(["", " border-radius:50%;height:", ";width:", ";"], _Ripple.rippleStyle, ({
  density,
  theme
}) => theme.sizes[size(density)], ({
  density,
  theme
}) => theme.sizes[size(density)]);
//# sourceMappingURL=AccordionIndicator.js.map