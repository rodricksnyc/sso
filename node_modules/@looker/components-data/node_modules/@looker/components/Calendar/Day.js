var _excluded = ["className", "date", "locale", "onDraftSelect", "onSelect", "selected", "style"],
    _excluded2 = ["callbacks"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import "core-js/modules/es.date.to-string.js";
import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";
import "core-js/modules/es.object.assign.js";

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { getDate, isSameDay } from 'date-fns';
import React from 'react';
import styled from 'styled-components';
import pick from 'lodash/pick';
import { rippleHandlerKeys, rippleStyle, useRipple, useRippleHandlers } from '../Ripple';
import { formatDateString } from './utils';
export var HitArea = styled.div.withConfig({
  displayName: "Day__HitArea",
  componentId: "sc-14dncin-0"
})(["height:", ";left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);width:", ";"], function (_ref) {
  var theme = _ref.theme;
  return theme.space.u8;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.space.u8;
});
export var Day = styled(function (_ref3) {
  var className = _ref3.className,
      date = _ref3.date,
      locale = _ref3.locale,
      onDraftSelect = _ref3.onDraftSelect,
      onSelect = _ref3.onSelect,
      selected = _ref3.selected,
      style = _ref3.style,
      props = _objectWithoutProperties(_ref3, _excluded);

  var dateString = formatDateString(date, 'EEE MMM dd, yyyy', locale);
  var today = isSameDay(date, new Date());

  var handleClick = function handleClick() {
    onSelect(date);
  };

  var handleHoverFocus = function handleHoverFocus() {
    return onDraftSelect(date);
  };

  var _useRipple = useRipple({
    className: className,
    color: 'neutral',
    style: style
  }),
      callbacks = _useRipple.callbacks,
      rippleProps = _objectWithoutProperties(_useRipple, _excluded2);

  var rippleHandlers = useRippleHandlers(callbacks, _objectSpread(_objectSpread({}, pick(_objectSpread({}, props), rippleHandlerKeys)), {}, {
    onFocus: handleHoverFocus,
    onMouseEnter: handleHoverFocus
  }), props.disabled);
  return React.createElement("button", _extends({}, props, {
    "aria-current": today ? 'date' : 'false',
    "aria-label": dateString,
    "aria-selected": selected,
    onClick: handleClick,
    title: dateString,
    type: "button"
  }, rippleProps, rippleHandlers), React.createElement(HitArea, null), getDate(date));
}).withConfig({
  displayName: "Day",
  componentId: "sc-14dncin-1"
})(["", " background-color:transparent;border:none;border-radius:", ";box-sizing:border-box;color:", ";font-family:", ";font-size:", ";height:", ";line-height:", ";margin:0 ", ";outline:none;position:relative;width:", ";&[aria-current='date']{border:1px solid ", ";color:", ";}&[aria-selected='true']{background:", ";border:1px solid ", ";color:", ";}"], rippleStyle, function (_ref4) {
  var theme = _ref4.theme;
  return theme.space.u5;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.colors.text3;
}, function (_ref6) {
  var theme = _ref6.theme;
  return theme.fonts.body;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.fontSizes.xsmall;
}, function (_ref8) {
  var theme = _ref8.theme;
  return theme.space.u7;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.space.u4;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.space.u05;
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.space.u7;
}, function (_ref12) {
  var theme = _ref12.theme;
  return theme.colors.key;
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.colors.key;
}, function (_ref14) {
  var theme = _ref14.theme;
  return theme.colors.key;
}, function (_ref15) {
  var theme = _ref15.theme;
  return theme.colors.key;
}, function (_ref16) {
  var theme = _ref16.theme;
  return theme.colors.background;
});
//# sourceMappingURL=Day.js.map