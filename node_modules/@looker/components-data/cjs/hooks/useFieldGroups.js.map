{"version":3,"file":"useFieldGroups.js","names":["fetchModelExplore","memoize","model","explore","sdk","result","lookml_model_explore","groupFields","fields","reduce","acc","dimension","view","push","useFieldGroups","id","useSDK","DataState","useContainer","setModelExplore","getModelExplore","useQueryMetadata","metadata","allModelFields","fetcher","isEmpty","undefined","useSWR","SWRData","data","isValidating","useEffect","ok","value","draftModelFields","isEqual","fieldGroups","dimensions","isOK","isPending","getErrorResponse"],"sources":["../../../src/hooks/useFieldGroups.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport { useEffect } from 'react'\nimport type {\n  Looker40SDK,\n  IError,\n  ILookmlModelExplore,\n  ILookmlModelExploreField,\n} from '@looker/sdk'\nimport type { SDKResponse } from '@looker/sdk-rtl'\nimport isEmpty from 'lodash/isEmpty'\nimport isEqual from 'lodash/isEqual'\nimport memoize from 'lodash/memoize'\nimport useSWR from 'swr'\nimport { getErrorResponse } from '../utils'\nimport { useSDK, useQueryMetadata, DataState } from '.'\n\nconst fetchModelExplore = memoize(\n  async (model: string, explore: string, sdk: Looker40SDK) => {\n    const result = await sdk.lookml_model_explore(model, explore, 'fields')\n    return result\n  }\n)\n\ntype FieldGroups = {\n  [group: string]: ILookmlModelExploreField[]\n}\n\n// Group the fields by view name, for easier browsing\nconst groupFields = (fields: ILookmlModelExploreField[] | undefined) => {\n  if (!fields) return {}\n  return fields.reduce((acc: FieldGroups, dimension) => {\n    const { view } = dimension\n    if (!view) return acc\n    if (!acc[view]) {\n      acc[view] = []\n    }\n    acc[view].push(dimension)\n    return acc\n  }, {})\n}\n\n/**\n * A shared hook for fetching the Field Groups associated with query ID.\n * Used for rendering filter options.\n *\n * @param id a numeric query id\n * @returns field groups and api state\n */\n\nexport const useFieldGroups = (id: number) => {\n  const sdk = useSDK()\n  const { setModelExplore, getModelExplore } = DataState.useContainer()\n\n  /*\n   * Check for stored values\n   * -----------------------------------------------------------\n   */\n  const {\n    metadata: { model, view },\n  } = useQueryMetadata(id)\n  const allModelFields = getModelExplore(model, view)\n\n  /*\n   * Dispatch network request\n   * -----------------------------------------------------------\n   */\n\n  const fetcher = async () => {\n    if (id > 0 && model && view && isEmpty(allModelFields)) {\n      return fetchModelExplore(model, view, sdk)\n    }\n\n    return undefined\n  }\n\n  const { data: SWRData, isValidating } = useSWR<void | SDKResponse<\n    ILookmlModelExplore,\n    IError\n  >>(\n    `useFieldGroups-${model}-${view}`, // caution: argument string must be unique to this instance\n    fetcher\n  )\n\n  /*\n   * Publish SWR response to central data store\n   * -----------------------------------------------------------\n   */\n\n  useEffect(() => {\n    const { fields: draftModelFields } =\n      (SWRData?.ok && SWRData.value) || ({} as ILookmlModelExplore)\n\n    if (\n      id &&\n      model &&\n      view &&\n      draftModelFields &&\n      !isEqual(draftModelFields, allModelFields)\n    ) {\n      setModelExplore(model, view, draftModelFields)\n    }\n  }, [id, SWRData, allModelFields, model, setModelExplore, view])\n\n  /*\n   * Group dimension fields for easier use in filters\n   * -----------------------------------------------------------\n   */\n\n  const fieldGroups = allModelFields?.dimensions\n    ? groupFields(allModelFields?.dimensions)\n    : {}\n\n  return {\n    fieldGroups,\n    isOK: !!fieldGroups,\n    isPending: isValidating,\n    ...getErrorResponse(SWRData),\n  }\n}\n"],"mappings":"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"}