import "core-js/modules/es.object.assign.js";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { useTranslation } from 'react-i18next';
import React, { forwardRef } from 'react';
import { fontSize, padding, reset } from '@looker/design-tokens';
import styled, { css } from 'styled-components';
import { useArrowKeyNav } from '../utils';
export var tabListCSS = css(["", " ", " ", " border-bottom:1px solid ", ";-ms-overflow-style:none;overflow-x:auto;scrollbar-width:none;white-space:nowrap;&::-webkit-scrollbar{display:none;}", ""], reset, padding, fontSize, function (_ref) {
  var theme = _ref.theme;
  return theme.colors.ui2;
}, function (_ref2) {
  var distribute = _ref2.distribute;
  return distribute && css(["display:grid;grid-auto-columns:1fr;grid-auto-flow:column;button{padding:0;span{border-radius:0;}span:first-child{padding:0 ", ";}}"], function (_ref3) {
    var theme = _ref3.theme;
    return theme.space.u4;
  });
});
export var TabList2 = styled(forwardRef(function (_ref4, ref) {
  var children = _ref4.children,
      className = _ref4.className;

  var _useTranslation = useTranslation('TabList'),
      t = _useTranslation.t;

  var navProps = useArrowKeyNav({
    axis: 'horizontal',
    ref: ref
  });
  return React.createElement("div", _extends({
    "aria-label": t('Tabs'),
    className: className,
    role: "tablist"
  }, navProps), children);
})).attrs(function (_ref5) {
  var _ref5$fontSize = _ref5.fontSize,
      fontSize = _ref5$fontSize === void 0 ? 'small' : _ref5$fontSize;
  return {
    fontSize: fontSize
  };
}).withConfig({
  displayName: "TabList2",
  componentId: "sc-2bxa01-0"
})(["", ""], tabListCSS);
//# sourceMappingURL=TabList2.js.map