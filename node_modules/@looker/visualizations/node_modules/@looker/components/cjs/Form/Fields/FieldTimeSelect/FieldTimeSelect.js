"use strict";

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.slice.js");

require("core-js/modules/es.array.from.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldTimeSelect = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _omit = _interopRequireDefault(require("lodash/omit"));

var _Field = require("../Field");

var _useFloatingLabel = require("../Field/useFloatingLabel");

var _Form = require("../../Form");

var _Tooltip = require("../../../Tooltip");

var _utils = require("../../../utils");

var _InputTimeSelect = require("../../Inputs/InputTimeSelect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

const FieldTimeSelect = (0, _styledComponents.default)((0, _react.forwardRef)((props, ref) => {
  const validationMessage = (0, _Form.useFormContext)(props);
  const id = (0, _utils.useID)(props.id);
  const fieldProps = (0, _omit.default)((0, _Field.omitFieldProps)(props), ['onChange']);

  const _useState = (0, _react.useState)(''),
        _useState2 = _slicedToArray(_useState, 2),
        formatError = _useState2[0],
        setFormatError = _useState2[1];

  const onChange = value => {
    props.onChange && props.onChange(value);

    if (value) {
      setFormatError('');
    } else {
      setFormatError('Invalid Time');
    }
  };

  const onBlur = () => {
    setFormatError('');
  };

  const errorMessage = formatError ? {
    message: formatError,
    type: 'error'
  } : validationMessage;

  const _useTranslation = (0, _utils.useTranslation)('TimeSelect'),
        translate = _useTranslation.t;

  return _react.default.createElement(_Field.FloatingLabelField, _extends({
    "data-testid": "FieldSelectMultiId"
  }, (0, _Field.pickFieldProps)(props), {
    id: id,
    validationMessage: errorMessage,
    hasValue: (0, _useFloatingLabel.getHasValue)(props)
  }), _react.default.createElement(_Tooltip.Tooltip, {
    placement: "top-end",
    content: translate('Select Time')
  }, _react.default.createElement("div", null, _react.default.createElement(_InputTimeSelect.InputTimeSelect, _extends({}, fieldProps, {
    "aria-labelledby": `labelledby-${id}`,
    id: id,
    validationType: errorMessage === null || errorMessage === void 0 ? void 0 : errorMessage.type,
    ref: ref,
    onChange: onChange,
    onBlur: onBlur
  })))));
})).withConfig({
  displayName: "FieldTimeSelect",
  componentId: "sc-18cfbnj-0"
})([""]);
exports.FieldTimeSelect = FieldTimeSelect;
//# sourceMappingURL=FieldTimeSelect.js.map