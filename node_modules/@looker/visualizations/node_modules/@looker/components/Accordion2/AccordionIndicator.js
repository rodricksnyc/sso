import "core-js/modules/es.object.keys.js";
import "core-js/modules/es.array.index-of.js";
import "core-js/modules/es.symbol.js";
import "core-js/modules/es.object.define-property.js";
import "core-js/modules/es.array.filter.js";
import "core-js/modules/es.object.get-own-property-descriptor.js";
import "core-js/modules/es.array.for-each.js";
import "core-js/modules/web.dom-collections.for-each.js";
import "core-js/modules/es.object.get-own-property-descriptors.js";
import "core-js/modules/es.object.define-properties.js";
import "core-js/modules/es.object.assign.js";
var _excluded = ["children", "density", "indicatorPosition"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import pick from 'lodash/pick';
import React from 'react';
import styled from 'styled-components';
import { StyledIconBase } from '@styled-icons/styled-icon';
import { rippleHandlerKeys, rippleStyle, useRipple, useRippleHandlers } from '../Ripple';
import { accordionDimensions } from './accordionDimensions';

var size = function size() {
  var density = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return accordionDimensions(density).indicatorSize;
};

var gap = function gap() {
  var density = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  return accordionDimensions(density).indicatorGap;
};

export var AccordionIndicator = styled(function (_ref) {
  var children = _ref.children,
      density = _ref.density,
      indicatorPosition = _ref.indicatorPosition,
      props = _objectWithoutProperties(_ref, _excluded);

  var _useRipple = useRipple({
    color: 'neutral'
  }),
      callbacks = _useRipple.callbacks,
      rippleClassName = _useRipple.className,
      rippleStyle = _useRipple.style;

  var rippleHandlers = useRippleHandlers(callbacks, _objectSpread({}, pick(_objectSpread({}, props), rippleHandlerKeys)));
  var rippleContainerProps = {
    className: rippleClassName,
    style: rippleStyle
  };
  var isIndicatorToggleOnly = props.tabIndex === -1;
  return React.createElement("div", _extends({}, props, isIndicatorToggleOnly && rippleHandlers), React.createElement(RippleContainer, _extends({
    density: density || 0
  }, rippleContainerProps), children));
}).withConfig({
  displayName: "AccordionIndicator",
  componentId: "sc-1w66fqe-0"
})(["align-items:center;display:flex;justify-content:center;outline:none;", " ", "{height:", ";vertical-align:baseline;width:", ";}"], function (_ref2) {
  var density = _ref2.density,
      indicatorPosition = _ref2.indicatorPosition,
      space = _ref2.theme.space;
  return indicatorPosition === 'left' ? "margin-right: ".concat(space[gap(density)], ";") : "margin-left: ".concat(space[gap(density)], ";");
}, StyledIconBase, function (_ref3) {
  var density = _ref3.density,
      theme = _ref3.theme;
  return theme.sizes[size(density)];
}, function (_ref4) {
  var density = _ref4.density,
      theme = _ref4.theme;
  return theme.sizes[size(density)];
});
var RippleContainer = styled.div.withConfig({
  displayName: "AccordionIndicator__RippleContainer",
  componentId: "sc-1w66fqe-1"
})(["", " border-radius:50%;height:", ";width:", ";"], rippleStyle, function (_ref5) {
  var density = _ref5.density,
      theme = _ref5.theme;
  return theme.sizes[size(density)];
}, function (_ref6) {
  var density = _ref6.density,
      theme = _ref6.theme;
  return theme.sizes[size(density)];
});
//# sourceMappingURL=AccordionIndicator.js.map